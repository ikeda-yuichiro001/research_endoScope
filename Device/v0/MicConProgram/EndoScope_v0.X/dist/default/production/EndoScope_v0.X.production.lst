

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Apr 27 10:18:51 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F1827 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0097                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009A                     	;# 
    98  009B                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0113                     	;# 
   108  0114                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011A                     	;# 
   115  011B                     	;# 
   116  011D                     	;# 
   117  011E                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  0191                     	;# 
   121  0191                     	;# 
   122  0192                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0194                     	;# 
   127  0195                     	;# 
   128  0196                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019C                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  020C                     	;# 
   141  020D                     	;# 
   142  0211                     	;# 
   143  0211                     	;# 
   144  0212                     	;# 
   145  0212                     	;# 
   146  0213                     	;# 
   147  0213                     	;# 
   148  0214                     	;# 
   149  0214                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0216                     	;# 
   154  0216                     	;# 
   155  0217                     	;# 
   156  0217                     	;# 
   157  0219                     	;# 
   158  021A                     	;# 
   159  021B                     	;# 
   160  021C                     	;# 
   161  021D                     	;# 
   162  021E                     	;# 
   163  021F                     	;# 
   164  0291                     	;# 
   165  0291                     	;# 
   166  0292                     	;# 
   167  0293                     	;# 
   168  0294                     	;# 
   169  0295                     	;# 
   170  0295                     	;# 
   171  0296                     	;# 
   172  0298                     	;# 
   173  0298                     	;# 
   174  0299                     	;# 
   175  029A                     	;# 
   176  029B                     	;# 
   177  029C                     	;# 
   178  029C                     	;# 
   179  029D                     	;# 
   180  029E                     	;# 
   181  029E                     	;# 
   182  0311                     	;# 
   183  0311                     	;# 
   184  0312                     	;# 
   185  0313                     	;# 
   186  0318                     	;# 
   187  0318                     	;# 
   188  0319                     	;# 
   189  031A                     	;# 
   190  0394                     	;# 
   191  0395                     	;# 
   192  0396                     	;# 
   193  039A                     	;# 
   194  039C                     	;# 
   195  039D                     	;# 
   196  039E                     	;# 
   197  039F                     	;# 
   198  0415                     	;# 
   199  0416                     	;# 
   200  0417                     	;# 
   201  041C                     	;# 
   202  041D                     	;# 
   203  041E                     	;# 
   204  0FE4                     	;# 
   205  0FE5                     	;# 
   206  0FE6                     	;# 
   207  0FE7                     	;# 
   208  0FE8                     	;# 
   209  0FE9                     	;# 
   210  0FEA                     	;# 
   211  0FEB                     	;# 
   212  0FED                     	;# 
   213  0FEE                     	;# 
   214  0FEF                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0094                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  010C                     	;# 
   262  010D                     	;# 
   263  0111                     	;# 
   264  0112                     	;# 
   265  0113                     	;# 
   266  0114                     	;# 
   267  0115                     	;# 
   268  0116                     	;# 
   269  0117                     	;# 
   270  0118                     	;# 
   271  0119                     	;# 
   272  011A                     	;# 
   273  011B                     	;# 
   274  011D                     	;# 
   275  011E                     	;# 
   276  018C                     	;# 
   277  018D                     	;# 
   278  0191                     	;# 
   279  0191                     	;# 
   280  0192                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0194                     	;# 
   285  0195                     	;# 
   286  0196                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019C                     	;# 
   294  019C                     	;# 
   295  019D                     	;# 
   296  019E                     	;# 
   297  019F                     	;# 
   298  020C                     	;# 
   299  020D                     	;# 
   300  0211                     	;# 
   301  0211                     	;# 
   302  0212                     	;# 
   303  0212                     	;# 
   304  0213                     	;# 
   305  0213                     	;# 
   306  0214                     	;# 
   307  0214                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0216                     	;# 
   312  0216                     	;# 
   313  0217                     	;# 
   314  0217                     	;# 
   315  0219                     	;# 
   316  021A                     	;# 
   317  021B                     	;# 
   318  021C                     	;# 
   319  021D                     	;# 
   320  021E                     	;# 
   321  021F                     	;# 
   322  0291                     	;# 
   323  0291                     	;# 
   324  0292                     	;# 
   325  0293                     	;# 
   326  0294                     	;# 
   327  0295                     	;# 
   328  0295                     	;# 
   329  0296                     	;# 
   330  0298                     	;# 
   331  0298                     	;# 
   332  0299                     	;# 
   333  029A                     	;# 
   334  029B                     	;# 
   335  029C                     	;# 
   336  029C                     	;# 
   337  029D                     	;# 
   338  029E                     	;# 
   339  029E                     	;# 
   340  0311                     	;# 
   341  0311                     	;# 
   342  0312                     	;# 
   343  0313                     	;# 
   344  0318                     	;# 
   345  0318                     	;# 
   346  0319                     	;# 
   347  031A                     	;# 
   348  0394                     	;# 
   349  0395                     	;# 
   350  0396                     	;# 
   351  039A                     	;# 
   352  039C                     	;# 
   353  039D                     	;# 
   354  039E                     	;# 
   355  039F                     	;# 
   356  0415                     	;# 
   357  0416                     	;# 
   358  0417                     	;# 
   359  041C                     	;# 
   360  041D                     	;# 
   361  041E                     	;# 
   362  0FE4                     	;# 
   363  0FE5                     	;# 
   364  0FE6                     	;# 
   365  0FE7                     	;# 
   366  0FE8                     	;# 
   367  0FE9                     	;# 
   368  0FEA                     	;# 
   369  0FEB                     	;# 
   370  0FED                     	;# 
   371  0FEE                     	;# 
   372  0FEF                     	;# 
   373                           
   374                           	psect	idataBANK0
   375  0186                     __pidataBANK0:
   376                           
   377                           ;initializer for _DB
   378  0186  3400               	retlw	0
   379  0187  34FF               	retlw	-1
   380  0188  3401               	retlw	1
   381  0189  3400               	retlw	0
   382  018A  3401               	retlw	1
   383  018B  3400               	retlw	0
   384  018C  3400               	retlw	0
   385  018D  34FF               	retlw	-1
   386  018E  34FF               	retlw	-1
   387  018F  3400               	retlw	0
   388  0190  3400               	retlw	0
   389  0191  3401               	retlw	1
   390  0192  3400               	retlw	0
   391  0193  3401               	retlw	1
   392  0194  34FF               	retlw	-1
   393  0195  3400               	retlw	0
   394                           
   395                           	psect	nvBANK0
   396  0038                     __pnvBANK0:
   397  0038                     _reData:
   398  0038                     	ds	4
   399  000C                     _PORTA	set	12
   400  000D                     _PORTB	set	13
   401  005F                     _GIE	set	95
   402  005E                     _PEIE	set	94
   403  005B                     _IOCIE	set	91
   404  008D                     _RCIF	set	141
   405  0058                     _IOCIF	set	88
   406  009D                     _ADCON0	set	157
   407  009E                     _ADCON1	set	158
   408  008D                     _TRISB	set	141
   409  008C                     _TRISA	set	140
   410  0099                     _OSCCON	set	153
   411  009B                     _ADRESL	set	155
   412  009C                     _ADRESH	set	156
   413  009D                     _ADCON0bits	set	157
   414  048D                     _RCIE	set	1165
   415  010D                     _LATBbits	set	269
   416  0117                     _FVRCON	set	279
   417  011E                     _APFCON1	set	286
   418  011D                     _APFCON0	set	285
   419  019D                     _RCSTA	set	413
   420  019E                     _TXSTA	set	414
   421  019B                     _SPBRGL	set	411
   422  019C                     _SPBRGH	set	412
   423  019F                     _BAUDCON	set	415
   424  018D                     _ANSELB	set	397
   425  018C                     _ANSELA	set	396
   426  019A                     _TXREG	set	410
   427  0199                     _RCREG	set	409
   428  0CF1                     _TRMT	set	3313
   429  0394                     _IOCBP	set	916
   430  0395                     _IOCBN	set	917
   431  0396                     _IOCBF	set	918
   432                           
   433                           	psect	stringtext1
   434  0114                     __pstringtext1:
   435  0114                     STR_1:
   436  0114  3430               	retlw	48	;'0'
   437  0115  3431               	retlw	49	;'1'
   438  0116  3432               	retlw	50	;'2'
   439  0117  3433               	retlw	51	;'3'
   440  0118  3434               	retlw	52	;'4'
   441  0119  3435               	retlw	53	;'5'
   442  011A  3436               	retlw	54	;'6'
   443  011B  3437               	retlw	55	;'7'
   444  011C  3438               	retlw	56	;'8'
   445  011D  3439               	retlw	57	;'9'
   446  011E  3461               	retlw	97	;'a'
   447  011F  3462               	retlw	98	;'b'
   448  0120  3463               	retlw	99	;'c'
   449  0121  3464               	retlw	100	;'d'
   450  0122  3465               	retlw	101	;'e'
   451  0123  3466               	retlw	102	;'f'
   452  0124  3467               	retlw	103	;'g'
   453  0125  3468               	retlw	104	;'h'
   454  0126  3469               	retlw	105	;'i'
   455  0127  346A               	retlw	106	;'j'
   456  0128  346B               	retlw	107	;'k'
   457  0129  346C               	retlw	108	;'l'
   458  012A  346D               	retlw	109	;'m'
   459  012B  346E               	retlw	110	;'n'
   460  012C  346F               	retlw	111	;'o'
   461  012D  3470               	retlw	112	;'p'
   462  012E  3471               	retlw	113	;'q'
   463  012F  3472               	retlw	114	;'r'
   464  0130  3473               	retlw	115	;'s'
   465  0131  3474               	retlw	116	;'t'
   466  0132  3475               	retlw	117	;'u'
   467  0133  3476               	retlw	118	;'v'
   468  0134  3477               	retlw	119	;'w'
   469  0135  3478               	retlw	120	;'x'
   470  0136  3479               	retlw	121	;'y'
   471  0137  347A               	retlw	122	;'z'
   472  0138  3441               	retlw	65	;'A'
   473  0139  3442               	retlw	66	;'B'
   474  013A  3443               	retlw	67	;'C'
   475  013B  3444               	retlw	68	;'D'
   476  013C  3445               	retlw	69	;'E'
   477  013D  3446               	retlw	70	;'F'
   478  013E  3447               	retlw	71	;'G'
   479  013F  3448               	retlw	72	;'H'
   480  0140  3449               	retlw	73	;'I'
   481  0141  344A               	retlw	74	;'J'
   482  0142  344B               	retlw	75	;'K'
   483  0143  344C               	retlw	76	;'L'
   484  0144  344D               	retlw	77	;'M'
   485  0145  344E               	retlw	78	;'N'
   486  0146  344F               	retlw	79	;'O'
   487  0147  3450               	retlw	80	;'P'
   488  0148  3451               	retlw	81	;'Q'
   489  0149  3452               	retlw	82	;'R'
   490  014A  3453               	retlw	83	;'S'
   491  014B  3454               	retlw	84	;'T'
   492  014C  3455               	retlw	85	;'U'
   493  014D  3456               	retlw	86	;'V'
   494  014E  3457               	retlw	87	;'W'
   495  014F  3458               	retlw	88	;'X'
   496  0150  3459               	retlw	89	;'Y'
   497  0151  345A               	retlw	90	;'Z'
   498  0152  342B               	retlw	43	;'+'
   499  0153  342D               	retlw	45	;'-'
   500  0154  3400               	retlw	0
   501                           
   502                           	psect	stringtext2
   503  0000                     __pstringtext2:
   504                           
   505                           	psect	cinit
   506  0053                     start_initialization:	
   507                           ; #config settings
   508                           
   509  0053                     __initialization:
   510                           
   511                           ; Initialize objects allocated to BANK0
   512  0053  3086               	movlw	low __pidataBANK0
   513  0054  0084               	movwf	4
   514  0055  3081               	movlw	(high __pidataBANK0)| (0+128)
   515  0056  0085               	movwf	5
   516  0057  3020               	movlw	low __pdataBANK0
   517  0058  0086               	movwf	6
   518  0059  3000               	movlw	high __pdataBANK0
   519  005A  0087               	movwf	7
   520  005B  3010               	movlw	16
   521  005C  3181  21AC  3180   	fcall	init_ram
   522                           
   523                           ; Clear objects allocated to COMMON
   524  005F  01F6               	clrf	__pbssCOMMON& (0+127)
   525  0060  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   526  0061  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   527                           
   528                           ; Clear objects allocated to BANK0
   529  0062  01BC               	clrf	__pbssBANK0& (0+127)
   530  0063  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   531  0064  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   532  0065  01BF               	clrf	(__pbssBANK0+3)& (0+127)
   533  0066                     end_of_initialization:	
   534                           ;End of C runtime variable initialization code
   535                           
   536  0066                     __end_of__initialization:
   537  0066  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   538  0067  0020               	movlb	0
   539  0068  3180  286A         	ljmp	_main	;jump to C main() function
   540                           
   541                           	psect	bssCOMMON
   542  0076                     __pbssCOMMON:
   543  0076                     _rL:
   544  0076                     	ds	1
   545  0077                     _SendFlag:
   546  0077                     	ds	1
   547  0078                     _HD:
   548  0078                     	ds	1
   549                           
   550                           	psect	bssBANK0
   551  003C                     __pbssBANK0:
   552  003C                     _sendData:
   553  003C                     	ds	4
   554                           
   555                           	psect	dataBANK0
   556  0020                     __pdataBANK0:
   557  0020                     _DB:
   558  0020                     	ds	16
   559                           
   560                           	psect	inittext
   561  01AC                     init_ram:
   562  01AC  00FE               	movwf	btemp
   563  01AD                     initloop:
   564  01AD  0012               	moviw fsr0++
   565  01AE  001E               	movwi fsr1++
   566  01AF  0BFE               	decfsz	btemp,f
   567  01B0  29AD               	goto	initloop
   568  01B1  3400               	retlw	0
   569                           
   570                           	psect	cstackCOMMON
   571  0070                     __pcstackCOMMON:
   572  0070                     ?_OnInterrupt:
   573  0070                     ??_OnInterrupt:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_SendUART_Raw:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_SendUART:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_SendAD:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_main:	
   586                           ; 1 bytes @ 0x0
   587                           
   588                           
   589                           ; 1 bytes @ 0x0
   590  0070                     	ds	4
   591  0074                     ??_SendUART_Raw:
   592  0074                     SendUART_Raw@c:	
   593                           ; 1 bytes @ 0x4
   594                           
   595                           
   596                           ; 1 bytes @ 0x4
   597  0074                     	ds	1
   598  0075                     ??_SendUART:
   599  0075                     SendUART@c:	
   600                           ; 1 bytes @ 0x5
   601                           
   602                           
   603                           ; 1 bytes @ 0x5
   604  0075                     	ds	1
   605                           
   606                           	psect	cstackBANK0
   607  0030                     __pcstackBANK0:
   608  0030                     ??_SendAD:
   609                           
   610                           ; 1 bytes @ 0x0
   611  0030                     	ds	4
   612  0034                     ??_main:
   613                           
   614                           ; 1 bytes @ 0x4
   615  0034                     	ds	4
   616                           
   617                           	psect	maintext
   618  006A                     __pmaintext:	
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   621 ;;
   622 ;; *************** function _main *****************
   623 ;; Defined at:
   624 ;;		line 54 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : B1F/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   638 ;;      Params:         0       0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0       0
   640 ;;      Temps:          0       4       0       0       0       0
   641 ;;      Totals:         0       4       0       0       0       0
   642 ;;Total ram usage:        4 bytes
   643 ;; Hardware stack levels required when called: 4
   644 ;; This function calls:
   645 ;;		_SendAD
   646 ;;		_SendUART
   647 ;;		_SendUART_Raw
   648 ;; This function is called by:
   649 ;;		Startup code after reset
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           
   654                           ;psect for function _main
   655  006A                     _main:
   656  006A                     l925:	
   657                           ;incstack = 0
   658                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   659                           
   660                           
   661                           ;main.c: 56:     PORTA = PORTB = 0x00;
   662  006A  30F0               	movlw	240
   663  006B  0021               	movlb	1	; select bank1
   664  006C  0099               	movwf	25	;volatile
   665                           
   666                           ;main.c: 57:     APFCON0= 0x00;
   667  006D  3000               	movlw	0
   668  006E  0020               	movlb	0	; select bank0
   669  006F  00BB               	movwf	_reData+3
   670  0070  307A               	movlw	122
   671  0071  00BA               	movwf	_reData+2
   672  0072  3012               	movlw	18
   673  0073  00B9               	movwf	_reData+1
   674  0074  3000               	movlw	0
   675  0075  00B8               	movwf	_reData
   676                           
   677                           ;main.c: 58:     APFCON1= 0x00;
   678  0076  3009               	movlw	9
   679  0077  0023               	movlb	3	; select bank3
   680  0078  008C               	movwf	12	;volatile
   681  0079                     l927:
   682                           
   683                           ;main.c: 59:     BAUDCON= 0x08;
   684  0079  018D               	clrf	13	;volatile
   685  007A                     l929:
   686                           
   687                           ;main.c: 60:     SPBRGH = 0x00;
   688  007A  30FF               	movlw	255
   689  007B  0021               	movlb	1	; select bank1
   690  007C  008C               	movwf	12	;volatile
   691  007D                     l931:
   692                           
   693                           ;main.c: 61:     SPBRGL = 0x44;
   694  007D  30FA               	movlw	250
   695  007E  008D               	movwf	13	;volatile
   696  007F                     l933:
   697                           
   698                           ;main.c: 62:     TXSTA = 0x24;
   699  007F  0020               	movlb	0	; select bank0
   700  0080  018D               	clrf	13	;volatile
   701  0081  018C               	clrf	12	;volatile
   702  0082                     l935:
   703                           
   704                           ;main.c: 63:     RCSTA = 0x90;
   705  0082  0022               	movlb	2	; select bank2
   706  0083  019D               	clrf	29	;volatile
   707  0084                     l937:
   708                           
   709                           ;main.c: 64:     FVRCON = 0x00;
   710  0084  019E               	clrf	30	;volatile
   711                           
   712                           ;main.c: 65:     ADCON1 = 0xd0;
   713  0085  3008               	movlw	8
   714  0086  0023               	movlb	3	; select bank3
   715  0087  009F               	movwf	31	;volatile
   716  0088                     l939:
   717                           
   718                           ;main.c: 66:     IOCBN = 0x30;
   719  0088  019C               	clrf	28	;volatile
   720  0089                     l941:
   721                           
   722                           ;main.c: 67:     IOCBP = 0x30;
   723  0089  3044               	movlw	68
   724  008A  009B               	movwf	27	;volatile
   725  008B                     l943:
   726                           
   727                           ;main.c: 68:     IOCBF = 0;
   728  008B  3024               	movlw	36
   729  008C  009E               	movwf	30	;volatile
   730  008D                     l945:
   731                           
   732                           ;main.c: 69:     IOCIE = 1;
   733  008D  3090               	movlw	144
   734  008E  009D               	movwf	29	;volatile
   735                           
   736                           ;main.c: 70:     RCIF = 0;
   737  008F  0022               	movlb	2	; select bank2
   738  0090  0197               	clrf	23	;volatile
   739  0091                     l947:
   740                           
   741                           ;main.c: 71:     RCIE = PEIE = GIE = 1;
   742  0091  30D0               	movlw	208
   743  0092  0021               	movlb	1	; select bank1
   744  0093  009E               	movwf	30	;volatile
   745  0094                     l949:
   746                           
   747                           ;main.c: 72:     LATBbits.LATB0 = 1;
   748  0094  3030               	movlw	48
   749  0095  0027               	movlb	7	; select bank7
   750  0096  0095               	movwf	21	;volatile
   751  0097                     l951:
   752                           
   753                           ;main.c: 73: 
   754  0097  3030               	movlw	48
   755  0098  0094               	movwf	20	;volatile
   756  0099                     l953:
   757                           
   758                           ;main.c: 74:     for (;;)
   759  0099  0196               	clrf	22	;volatile
   760  009A                     l955:
   761                           
   762                           ;main.c: 75:     {
   763  009A  158B               	bsf	11,3	;volatile
   764  009B                     l957:
   765                           
   766                           ;main.c: 76:         while(!SendFlag);
   767  009B  0020               	movlb	0	; select bank0
   768  009C  1291               	bcf	17,5	;volatile
   769  009D                     l959:
   770                           
   771                           ;main.c: 77: 
   772  009D  178B               	bsf	11,7	;volatile
   773  009E  1B8B               	btfsc	11,7	;volatile
   774  009F  28A1               	goto	u351
   775  00A0  28A3               	goto	u350
   776  00A1                     u351:
   777  00A1  170B               	bsf	11,6	;volatile
   778  00A2  28A4               	goto	u364
   779  00A3                     u350:
   780  00A3  130B               	bcf	11,6	;volatile
   781  00A4                     u364:
   782  00A4  1B0B               	btfsc	11,6	;volatile
   783  00A5  28A7               	goto	u361
   784  00A6  28AA               	goto	u360
   785  00A7                     u361:
   786  00A7  0021               	movlb	1	; select bank1
   787  00A8  1691               	bsf	17,5	;volatile
   788  00A9  28AC               	goto	u374
   789  00AA                     u360:
   790  00AA  0021               	movlb	1	; select bank1
   791  00AB  1291               	bcf	17,5	;volatile
   792  00AC                     u374:
   793  00AC                     l961:
   794                           
   795                           ;main.c: 78:         ADCON0 = 0x01; SendAD();
   796  00AC  0022               	movlb	2	; select bank2
   797  00AD  140D               	bsf	13,0	;volatile
   798  00AE                     l963:
   799  00AE  0877               	movf	_SendFlag,w
   800  00AF  1903               	btfsc	3,2
   801  00B0  28B2               	goto	u381
   802  00B1  28B3               	goto	u380
   803  00B2                     u381:
   804  00B2  28AE               	goto	l963
   805  00B3                     u380:
   806  00B3                     l965:
   807                           
   808                           ;main.c: 84:         SendUART(sendData >> 6 & 0x3F);
   809  00B3  3001               	movlw	1
   810  00B4  0021               	movlb	1	; select bank1
   811  00B5  009D               	movwf	29	;volatile
   812  00B6                     l967:
   813  00B6  3181  2155  3180   	fcall	_SendAD
   814  00B9                     l969:
   815                           
   816                           ;main.c: 85:         SendUART(sendData & 0x3F);
   817  00B9  300D               	movlw	13
   818  00BA  0021               	movlb	1	; select bank1
   819  00BB  009D               	movwf	29	;volatile
   820  00BC  3181  2155  3180   	fcall	_SendAD
   821  00BF                     l971:
   822                           
   823                           ;main.c: 87:         SendUART_Raw('\n');
   824  00BF  0020               	movlb	0	; select bank0
   825  00C0  083B               	movf	_reData+3,w
   826  00C1  00BF               	movwf	_sendData+3
   827  00C2  083A               	movf	_reData+2,w
   828  00C3  00BE               	movwf	_sendData+2
   829  00C4  0839               	movf	_reData+1,w
   830  00C5  00BD               	movwf	_sendData+1
   831  00C6  0838               	movf	_reData,w
   832  00C7  00BC               	movwf	_sendData
   833  00C8                     l973:
   834                           
   835                           ;main.c: 88:         SendFlag = 0;
   836  00C8  083C               	movf	_sendData,w
   837  00C9  00B4               	movwf	??_main
   838  00CA  083D               	movf	_sendData+1,w
   839  00CB  00B5               	movwf	??_main+1
   840  00CC  083E               	movf	_sendData+2,w
   841  00CD  00B6               	movwf	??_main+2
   842  00CE  083F               	movf	_sendData+3,w
   843  00CF  00B7               	movwf	??_main+3
   844  00D0  3012               	movlw	18
   845  00D1                     u395:
   846  00D1  36B7               	lsrf	??_main+3,f
   847  00D2  0CB6               	rrf	??_main+2,f
   848  00D3  0CB5               	rrf	??_main+1,f
   849  00D4  0CB4               	rrf	??_main,f
   850  00D5                     u390:
   851  00D5  0B89               	decfsz	9,f
   852  00D6  28D1               	goto	u395
   853  00D7  0834               	movf	??_main,w
   854  00D8  393F               	andlw	63
   855  00D9  3181  2196  3180   	fcall	_SendUART
   856  00DC                     l975:
   857                           
   858                           ;main.c: 89:     }
   859  00DC  0020               	movlb	0	; select bank0
   860  00DD  083C               	movf	_sendData,w
   861  00DE  00B4               	movwf	??_main
   862  00DF  083D               	movf	_sendData+1,w
   863  00E0  00B5               	movwf	??_main+1
   864  00E1  083E               	movf	_sendData+2,w
   865  00E2  00B6               	movwf	??_main+2
   866  00E3  083F               	movf	_sendData+3,w
   867  00E4  00B7               	movwf	??_main+3
   868  00E5  300C               	movlw	12
   869  00E6                     u405:
   870  00E6  36B7               	lsrf	??_main+3,f
   871  00E7  0CB6               	rrf	??_main+2,f
   872  00E8  0CB5               	rrf	??_main+1,f
   873  00E9  0CB4               	rrf	??_main,f
   874  00EA                     u400:
   875  00EA  0B89               	decfsz	9,f
   876  00EB  28E6               	goto	u405
   877  00EC  0834               	movf	??_main,w
   878  00ED  393F               	andlw	63
   879  00EE  3181  2196  3180   	fcall	_SendUART
   880  00F1                     l977:
   881                           
   882                           ;main.c: 90: }
   883  00F1  0020               	movlb	0	; select bank0
   884  00F2  083C               	movf	_sendData,w
   885  00F3  00B4               	movwf	??_main
   886  00F4  083D               	movf	_sendData+1,w
   887  00F5  00B5               	movwf	??_main+1
   888  00F6  083E               	movf	_sendData+2,w
   889  00F7  00B6               	movwf	??_main+2
   890  00F8  083F               	movf	_sendData+3,w
   891  00F9  00B7               	movwf	??_main+3
   892  00FA  3006               	movlw	6
   893  00FB                     u415:
   894  00FB  36B7               	lsrf	??_main+3,f
   895  00FC  0CB6               	rrf	??_main+2,f
   896  00FD  0CB5               	rrf	??_main+1,f
   897  00FE  0CB4               	rrf	??_main,f
   898  00FF                     u410:
   899  00FF  0B89               	decfsz	9,f
   900  0100  28FB               	goto	u415
   901  0101  0834               	movf	??_main,w
   902  0102  393F               	andlw	63
   903  0103  3181  2196  3180   	fcall	_SendUART
   904  0106                     l979:
   905  0106  0020               	movlb	0	; select bank0
   906  0107  083C               	movf	_sendData,w
   907  0108  393F               	andlw	63
   908  0109  3181  2196  3180   	fcall	_SendUART
   909  010C                     l981:
   910  010C  300A               	movlw	10
   911  010D  3181  21A3  3180   	fcall	_SendUART_Raw
   912  0110                     l983:
   913  0110  01F7               	clrf	_SendFlag
   914  0111  28AE               	goto	l963
   915  0112  3180  2851         	ljmp	start
   916  0114                     __end_of_main:
   917                           
   918                           	psect	text1
   919  0155                     __ptext1:	
   920 ;; *************** function _SendAD *****************
   921 ;; Defined at:
   922 ;;		line 42 in file "main.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   936 ;;      Params:         0       0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0       0
   938 ;;      Temps:          0       4       0       0       0       0
   939 ;;      Totals:         0       4       0       0       0       0
   940 ;;Total ram usage:        4 bytes
   941 ;; Hardware stack levels used: 1
   942 ;; Hardware stack levels required when called: 3
   943 ;; This function calls:
   944 ;;		_SendUART
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           
   951                           ;psect for function _SendAD
   952  0155                     _SendAD:
   953  0155                     l915:	
   954                           ;incstack = 0
   955                           ; Regs used in _SendAD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   956                           
   957                           
   958                           ;main.c: 44:     SendUART(HD & 0xF);
   959  0155  30A6               	movlw	166
   960  0156                     u427:
   961  0156  0B89               	decfsz	9,f
   962  0157  2956               	goto	u427
   963  0158  3200               	nop2
   964  0159                     l917:
   965                           
   966                           ;main.c: 45: }
   967  0159  0021               	movlb	1	; select bank1
   968  015A  149D               	bsf	29,1	;volatile
   969  015B  0000               	nop	;# 
   970  015C                     l102:	
   971                           ;main.c: 47: 
   972                           
   973  015C  0021               	movlb	1	; select bank1
   974  015D  189D               	btfsc	29,1	;volatile
   975  015E  2960               	goto	u331
   976  015F  2961               	goto	u330
   977  0160                     u331:
   978  0160  295C               	goto	l102
   979  0161                     u330:
   980  0161                     l919:
   981                           
   982                           ;main.c: 48: void main()
   983  0161  3003               	movlw	3
   984  0162  051C               	andwf	28,w	;volatile
   985  0163  0020               	movlb	0	; select bank0
   986  0164  00B0               	movwf	??_SendAD
   987  0165  0830               	movf	??_SendAD,w
   988  0166  00B2               	movwf	??_SendAD+2
   989  0167  0021               	movlb	1	; select bank1
   990  0168  081B               	movf	27,w	;volatile
   991  0169  0020               	movlb	0	; select bank0
   992  016A  00B1               	movwf	??_SendAD+1
   993  016B  0D32               	rlf	??_SendAD+2,w
   994  016C  0CB2               	rrf	??_SendAD+2,f
   995  016D  0CB1               	rrf	??_SendAD+1,f
   996  016E  0D32               	rlf	??_SendAD+2,w
   997  016F  0CB2               	rrf	??_SendAD+2,f
   998  0170  0CB1               	rrf	??_SendAD+1,f
   999  0171  0831               	movf	??_SendAD+1,w
  1000  0172  00B3               	movwf	??_SendAD+3
  1001  0173  0833               	movf	??_SendAD+3,w
  1002  0174  00F8               	movwf	_HD
  1003  0175                     l921:
  1004                           
  1005                           ;main.c: 49: {
  1006  0175  0878               	movf	_HD,w
  1007  0176  00B0               	movwf	??_SendAD
  1008  0177  3004               	movlw	4
  1009  0178                     u345:
  1010  0178  36B0               	lsrf	??_SendAD,f
  1011  0179  0B89               	decfsz	9,f
  1012  017A  2978               	goto	u345
  1013  017B  0830               	movf	??_SendAD,w
  1014  017C  390F               	andlw	15
  1015  017D  3181  2196  3181   	fcall	_SendUART
  1016  0180                     l923:
  1017                           
  1018                           ;main.c: 50:     OSCCON = 0xF0;
  1019  0180  0878               	movf	_HD,w
  1020  0181  390F               	andlw	15
  1021  0182  3181  2196  3181   	fcall	_SendUART
  1022  0185                     l105:
  1023  0185  0008               	return
  1024  0186                     __end_of_SendAD:
  1025                           
  1026                           	psect	text2
  1027  0196                     __ptext2:	
  1028 ;; *************** function _SendUART *****************
  1029 ;; Defined at:
  1030 ;;		line 36 in file "main.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  c               1    wreg     unsigned char 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  c               1    5[COMMON] unsigned char 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1044 ;;      Params:         0       0       0       0       0       0
  1045 ;;      Locals:         1       0       0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0
  1047 ;;      Totals:         1       0       0       0       0       0
  1048 ;;Total ram usage:        1 bytes
  1049 ;; Hardware stack levels used: 1
  1050 ;; Hardware stack levels required when called: 2
  1051 ;; This function calls:
  1052 ;;		_SendUART_Raw
  1053 ;; This function is called by:
  1054 ;;		_SendAD
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           
  1060                           ;psect for function _SendUART
  1061  0196                     _SendUART:
  1062                           
  1063                           ;incstack = 0
  1064                           ; Regs used in _SendUART: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1065                           ;SendUART@c stored from wreg
  1066  0196  00F5               	movwf	SendUART@c
  1067  0197                     l823:
  1068                           
  1069                           ;main.c: 36: void SendAD();main.c: 37: {;main.c: 38:     _delay(500);
  1070  0197  0875               	movf	SendUART@c,w
  1071  0198  3E14               	addlw	low (STR_1| (0+32768))
  1072  0199  0084               	movwf	4
  1073  019A  3081               	movlw	high (STR_1| (0+32768))
  1074  019B  1803               	skipnc
  1075  019C  3E01               	addlw	1
  1076  019D  0085               	movwf	5
  1077  019E  0800               	movf	0,w	;code access
  1078  019F  3181  21A3  3181   	fcall	_SendUART_Raw
  1079  01A2                     l99:
  1080  01A2  0008               	return
  1081  01A3                     __end_of_SendUART:
  1082                           
  1083                           	psect	text3
  1084  01A3                     __ptext3:	
  1085 ;; *************** function _SendUART_Raw *****************
  1086 ;; Defined at:
  1087 ;;		line 29 in file "main.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;  c               1    wreg     unsigned char 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  c               1    4[COMMON] unsigned char 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1101 ;;      Params:         0       0       0       0       0       0
  1102 ;;      Locals:         1       0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0       0
  1104 ;;      Totals:         1       0       0       0       0       0
  1105 ;;Total ram usage:        1 bytes
  1106 ;; Hardware stack levels used: 1
  1107 ;; Hardware stack levels required when called: 1
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_SendUART
  1112 ;;		_main
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           
  1117                           ;psect for function _SendUART_Raw
  1118  01A3                     _SendUART_Raw:
  1119                           
  1120                           ;incstack = 0
  1121                           ; Regs used in _SendUART_Raw: [wreg]
  1122                           ;SendUART_Raw@c stored from wreg
  1123  01A3  00F4               	movwf	SendUART_Raw@c
  1124  01A4                     l819:
  1125  01A4                     l93:	
  1126                           ;main.c: 29: ;main.c: 30: void SendUART(unsigned char c);main.c: 31: {
  1127                           
  1128  01A4  0023               	movlb	3	; select bank3
  1129  01A5  1C9E               	btfss	30,1	;volatile
  1130  01A6  29A8               	goto	u171
  1131  01A7  29A9               	goto	u170
  1132  01A8                     u171:
  1133  01A8  29A4               	goto	l93
  1134  01A9                     u170:
  1135  01A9                     l821:
  1136                           
  1137                           ;main.c: 32:     SendUART_Raw("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTU
      +                          VWXYZ+-"[c]);
  1138  01A9  0874               	movf	SendUART_Raw@c,w
  1139  01AA  009A               	movwf	26	;volatile
  1140  01AB                     l96:
  1141  01AB  0008               	return
  1142  01AC                     __end_of_SendUART_Raw:
  1143                           
  1144                           	psect	intentry
  1145  0004                     __pintentry:	
  1146 ;; *************** function _OnInterrupt *****************
  1147 ;; Defined at:
  1148 ;;		line 12 in file "main.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;		None
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;		None
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1162 ;;      Params:         0       0       0       0       0       0
  1163 ;;      Locals:         0       0       0       0       0       0
  1164 ;;      Temps:          4       0       0       0       0       0
  1165 ;;      Totals:         4       0       0       0       0       0
  1166 ;;Total ram usage:        4 bytes
  1167 ;; Hardware stack levels used: 1
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		Interrupt level 1
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175  0004                     _OnInterrupt:
  1176                           
  1177                           ;incstack = 0
  1178  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1179                           
  1180                           ; Regs used in _OnInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  1181  0005  3180               	pagesel	$
  1182  0006                     i1l835:
  1183                           
  1184                           ;main.c: 14:     if (RCIF)
  1185  0006  1C0B               	btfss	11,0	;volatile
  1186  0007  2809               	goto	u20_21
  1187  0008  280A               	goto	u20_20
  1188  0009                     u20_21:
  1189  0009  282F               	goto	i1l843
  1190  000A                     u20_20:
  1191  000A                     i1l837:
  1192                           
  1193                           ;main.c: 15:     {;main.c: 16:         if(RCREG == '\n') SendFlag = 1;
  1194  000A  0020               	movlb	0	; select bank0
  1195  000B  080D               	movf	13,w	;volatile
  1196  000C  00F0               	movwf	??_OnInterrupt
  1197  000D  3004               	movlw	4
  1198  000E                     u21_25:
  1199  000E  36F0               	lsrf	??_OnInterrupt,f
  1200  000F  0B89               	decfsz	9,f
  1201  0010  280E               	goto	u21_25
  1202  0011  3003               	movlw	3
  1203  0012  0570               	andwf	??_OnInterrupt,w
  1204  0013  00F1               	movwf	??_OnInterrupt+1
  1205  0014  0876               	movf	_rL,w
  1206  0015  00F2               	movwf	??_OnInterrupt+2
  1207  0016  3001               	movlw	1
  1208  0017                     u22_25:
  1209  0017  35F2               	lslf	??_OnInterrupt+2,f
  1210  0018  3EFF               	addlw	-1
  1211  0019  1D03               	skipz
  1212  001A  2817               	goto	u22_25
  1213  001B  3572               	lslf	??_OnInterrupt+2,w
  1214  001C  0471               	iorwf	??_OnInterrupt+1,w
  1215  001D  00F3               	movwf	??_OnInterrupt+3
  1216  001E  0873               	movf	??_OnInterrupt+3,w
  1217  001F  00F6               	movwf	_rL
  1218  0020                     i1l839:
  1219                           
  1220                           ;main.c: 17:         else if(RCREG == 'r') reData = 8000000;
  1221  0020  0876               	movf	_rL,w
  1222  0021  390F               	andlw	15
  1223  0022  3E20               	addlw	(low (_DB| 0))& (0+255)
  1224  0023  0086               	movwf	6
  1225  0024  0187               	clrf	7
  1226  0025  0801               	movf	1,w
  1227  0026  07B8               	addwf	_reData,f
  1228  0027  3980               	andlw	128
  1229  0028  1D03               	skipz
  1230  0029  30FF               	movlw	255
  1231  002A  3DB9               	addwfc	_reData+1,f
  1232  002B  3DBA               	addwfc	_reData+2,f
  1233  002C  3DBB               	addwfc	_reData+3,f
  1234  002D                     i1l841:
  1235                           
  1236                           ;main.c: 18:         RCIF = 0;
  1237  002D  0027               	movlb	7	; select bank7
  1238  002E  0196               	clrf	22	;volatile
  1239  002F                     i1l843:
  1240                           
  1241                           ;main.c: 20: }
  1242  002F  0020               	movlb	0	; select bank0
  1243  0030  1E91               	btfss	17,5	;volatile
  1244  0031  2833               	goto	u23_21
  1245  0032  2834               	goto	u23_20
  1246  0033                     u23_21:
  1247  0033  284F               	goto	i1l90
  1248  0034                     u23_20:
  1249  0034                     i1l845:
  1250                           
  1251                           ;main.c: 21: ;main.c: 22: 
  1252  0034  300A               	movlw	10
  1253  0035  0023               	movlb	3	; select bank3
  1254  0036  0619               	xorwf	25,w	;volatile
  1255  0037  1D03               	btfss	3,2
  1256  0038  283A               	goto	u24_21
  1257  0039  283B               	goto	u24_20
  1258  003A                     u24_21:
  1259  003A  283E               	goto	i1l849
  1260  003B                     u24_20:
  1261  003B                     i1l847:
  1262  003B  01F7               	clrf	_SendFlag
  1263  003C  0AF7               	incf	_SendFlag,f
  1264  003D  284D               	goto	i1l853
  1265  003E                     i1l849:
  1266  003E  3072               	movlw	114
  1267  003F  0619               	xorwf	25,w	;volatile
  1268  0040  1D03               	btfss	3,2
  1269  0041  2843               	goto	u25_21
  1270  0042  2844               	goto	u25_20
  1271  0043                     u25_21:
  1272  0043  284D               	goto	i1l853
  1273  0044                     u25_20:
  1274  0044                     i1l851:
  1275  0044  3000               	movlw	0
  1276  0045  0020               	movlb	0	; select bank0
  1277  0046  00BB               	movwf	_reData+3
  1278  0047  307A               	movlw	122
  1279  0048  00BA               	movwf	_reData+2
  1280  0049  3012               	movlw	18
  1281  004A  00B9               	movwf	_reData+1
  1282  004B  3000               	movlw	0
  1283  004C  00B8               	movwf	_reData
  1284  004D                     i1l853:
  1285                           
  1286                           ;main.c: 24: {
  1287  004D  0020               	movlb	0	; select bank0
  1288  004E  1291               	bcf	17,5	;volatile
  1289  004F                     i1l90:
  1290  004F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1291  0050  0009               	retfie
  1292  0051                     __end_of_OnInterrupt:
  1293  007E                     btemp	set	126	;btemp
  1294  007E                     int$flags	set	126
  1295  007E                     wtemp0	set	126
  1296                           
  1297                           	psect	config
  1298                           
  1299                           ;Config register CONFIG1 @ 0x8007
  1300                           ;	Oscillator Selection
  1301                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1302                           ;	Watchdog Timer Enable
  1303                           ;	WDTE = OFF, WDT disabled
  1304                           ;	Power-up Timer Enable
  1305                           ;	PWRTE = ON, PWRT enabled
  1306                           ;	MCLR Pin Function Select
  1307                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1308                           ;	Flash Program Memory Code Protection
  1309                           ;	CP = OFF, Program memory code protection is disabled
  1310                           ;	Data Memory Code Protection
  1311                           ;	CPD = OFF, Data memory code protection is disabled
  1312                           ;	Brown-out Reset Enable
  1313                           ;	BOREN = ON, Brown-out Reset enabled
  1314                           ;	Clock Out Enable
  1315                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1316                           ;	Internal/External Switchover
  1317                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1318                           ;	Fail-Safe Clock Monitor Enable
  1319                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1320  8007                     	org	32775
  1321  8007  0F84               	dw	3972
  1322                           
  1323                           ;Config register CONFIG2 @ 0x8008
  1324                           ;	Flash Memory Self-Write Protection
  1325                           ;	WRT = OFF, Write protection off
  1326                           ;	PLL Enable
  1327                           ;	PLLEN = OFF, 4x PLL disabled
  1328                           ;	Stack Overflow/Underflow Reset Enable
  1329                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1330                           ;	Brown-out Reset Voltage Selection
  1331                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  1332                           ;	Low-Voltage Programming Enable
  1333                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1334  8008                     	org	32776
  1335  8008  1AFF               	dw	6911

Data Sizes:
    Strings     65
    Constant    0
    Data        16
    BSS         7
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      8      32
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SendUART
    _SendAD->_SendUART
    _SendUART->_SendUART_Raw

Critical Paths under _OnInterrupt in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_SendAD

Critical Paths under _OnInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _OnInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _OnInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _OnInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _OnInterrupt in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     110
                                              4 BANK0      4     4      0
                             _SendAD
                           _SendUART
                       _SendUART_Raw
 ---------------------------------------------------------------------------------
 (1) _SendAD                                               4     4      0      44
                                              0 BANK0      4     4      0
                           _SendUART
 ---------------------------------------------------------------------------------
 (1) _SendUART                                             1     1      0      44
                                              5 COMMON     1     1      0
                       _SendUART_Raw
 ---------------------------------------------------------------------------------
 (1) _SendUART_Raw                                         1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _OnInterrupt                                          4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SendAD
     _SendUART
       _SendUART_Raw
   _SendUART
   _SendUART_Raw

 _OnInterrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      29       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      8      20       6       40.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      29      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Apr 27 10:18:51 2022

                     _DB 0020                       _HD 0078                       l93 01A4  
                     l96 01AB                       l99 01A2                       _rL 0076  
                    l102 015C                      l105 0185                      l821 01A9  
                    l823 0197                      l921 0175                      l819 01A4  
                    l923 0180                      l915 0155                      l931 007D  
                    l917 0159                      l941 0089                      l933 007F  
                    l925 006A                      l919 0161                      l951 0097  
                    l943 008B                      l935 0082                      l927 0079  
                    l961 00AC                      l953 0099                      l945 008D  
                    l937 0084                      l929 007A                      l971 00BF  
                    l963 00AE                      l955 009A                      l947 0091  
                    l939 0088                      l981 010C                      l973 00C8  
                    l965 00B3                      l957 009B                      l949 0094  
                    l983 0110                      l975 00DC                      l967 00B6  
                    l959 009D                      l977 00F1                      l969 00B9  
                    l979 0106                      _GIE 005F                      u400 00EA  
                    u170 01A9                      u330 0161                      u410 00FF  
                    u171 01A8                      u331 0160                      u405 00E6  
                    u350 00A3                      u415 00FB                      u351 00A1  
                    u360 00AA                      u345 0178                      u361 00A7  
                    u427 0156                      u380 00B3                      u364 00A4  
                    u381 00B2                      u390 00D5                      u374 00AC  
                    u395 00D1                      wreg 0009                     STR_1 0114  
                   _PEIE 005E                     _RCIE 048D                     _RCIF 008D  
                   i1l90 004F                     _TRMT 0CF1                     _main 006A  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 0051            ??_OnInterrupt 0070  
                  ?_main 0070                    _IOCBF 0396                    _IOCBN 0395  
                  _IOCBP 0394                    _IOCIE 005B                    _IOCIF 0058  
                  i1l841 002D                    i1l851 0044                    i1l843 002F  
                  i1l835 0006                    i1l853 004D                    i1l845 0034  
                  i1l837 000A                    i1l847 003B                    i1l839 0020  
                  i1l849 003E                    _RCREG 0199                    _RCSTA 019D  
                  u20_20 000A                    u20_21 0009                    u21_25 000E  
                  u22_25 0017                    u23_20 0034                    u23_21 0033  
                  u24_20 003B                    u24_21 003A                    u25_20 0044  
                  u25_21 0043                    _PORTA 000C                    _PORTB 000D  
                  _TRISA 008C                    _TRISB 008D                    _TXREG 019A  
                  _TXSTA 019E                    status 0003                    wtemp0 007E  
        __initialization 0053             __end_of_main 0114      __end_of_OnInterrupt 0051  
       __end_of_SendUART 01A3                   ??_main 0034                   _ADCON0 009D  
                 _ADCON1 009E                   _ADRESH 009C                   _ADRESL 009B  
                 _ANSELA 018C                   _ANSELB 018D            ?_SendUART_Raw 0070  
                 _FVRCON 0117                   _OSCCON 0099                   _SPBRGH 019C  
                 _SPBRGL 019B                   _SendAD 0155                   _reData 0038  
         ??_SendUART_Raw 0074  __end_of__initialization 0066              _OnInterrupt 0004  
         __pcstackCOMMON 0070             __pidataBANK0 0186               __pbssBANK0 003C  
              ?_SendUART 0070                  ?_SendAD 0070               __pmaintext 006A  
             __pintentry 0004                  _BAUDCON 019F                  _APFCON0 011D  
                _APFCON1 011E               ??_SendUART 0075          __size_of_SendAD 0031  
   __end_of_SendUART_Raw 01AC                  __ptext1 0155                  __ptext2 0196  
                __ptext3 01A3     end_of_initialization 0066                  init_ram 01AC  
                initloop 01AD             ?_OnInterrupt 0070           __end_of_SendAD 0186  
              SendUART@c 0075      start_initialization 0053    __size_of_SendUART_Raw 0009  
               ??_SendAD 0030        __size_of_SendUART 000D              __pdataBANK0 0020  
            __pbssCOMMON 0076                ___latbits 0001            __pcstackBANK0 0030  
           _SendUART_Raw 01A3                __pnvBANK0 0038                 _LATBbits 010D  
   __size_of_OnInterrupt 004D               _ADCON0bits 009D                 _SendUART 0196  
               _SendFlag 0077            SendUART_Raw@c 0074            __size_of_main 00AA  
               _sendData 003C                 int$flags 007E                 intlevel1 0000  
          __pstringtext1 0114            __pstringtext2 0000  
