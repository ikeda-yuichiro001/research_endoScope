

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 22 13:27:21 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F1827 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  0111                     	;# 
   107  0112                     	;# 
   108  0113                     	;# 
   109  0114                     	;# 
   110  0115                     	;# 
   111  0116                     	;# 
   112  0117                     	;# 
   113  0118                     	;# 
   114  0119                     	;# 
   115  011A                     	;# 
   116  011B                     	;# 
   117  011D                     	;# 
   118  011E                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0191                     	;# 
   122  0191                     	;# 
   123  0192                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0193                     	;# 
   127  0194                     	;# 
   128  0195                     	;# 
   129  0196                     	;# 
   130  0199                     	;# 
   131  019A                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019C                     	;# 
   137  019C                     	;# 
   138  019D                     	;# 
   139  019E                     	;# 
   140  019F                     	;# 
   141  020C                     	;# 
   142  020D                     	;# 
   143  0211                     	;# 
   144  0211                     	;# 
   145  0212                     	;# 
   146  0212                     	;# 
   147  0213                     	;# 
   148  0213                     	;# 
   149  0214                     	;# 
   150  0214                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0216                     	;# 
   155  0216                     	;# 
   156  0217                     	;# 
   157  0217                     	;# 
   158  0219                     	;# 
   159  021A                     	;# 
   160  021B                     	;# 
   161  021C                     	;# 
   162  021D                     	;# 
   163  021E                     	;# 
   164  021F                     	;# 
   165  0291                     	;# 
   166  0291                     	;# 
   167  0292                     	;# 
   168  0293                     	;# 
   169  0294                     	;# 
   170  0295                     	;# 
   171  0295                     	;# 
   172  0296                     	;# 
   173  0298                     	;# 
   174  0298                     	;# 
   175  0299                     	;# 
   176  029A                     	;# 
   177  029B                     	;# 
   178  029C                     	;# 
   179  029C                     	;# 
   180  029D                     	;# 
   181  029E                     	;# 
   182  029E                     	;# 
   183  0311                     	;# 
   184  0311                     	;# 
   185  0312                     	;# 
   186  0313                     	;# 
   187  0318                     	;# 
   188  0318                     	;# 
   189  0319                     	;# 
   190  031A                     	;# 
   191  0394                     	;# 
   192  0395                     	;# 
   193  0396                     	;# 
   194  039A                     	;# 
   195  039C                     	;# 
   196  039D                     	;# 
   197  039E                     	;# 
   198  039F                     	;# 
   199  0415                     	;# 
   200  0416                     	;# 
   201  0417                     	;# 
   202  041C                     	;# 
   203  041D                     	;# 
   204  041E                     	;# 
   205  0FE4                     	;# 
   206  0FE5                     	;# 
   207  0FE6                     	;# 
   208  0FE7                     	;# 
   209  0FE8                     	;# 
   210  0FE9                     	;# 
   211  0FEA                     	;# 
   212  0FEB                     	;# 
   213  0FED                     	;# 
   214  0FEE                     	;# 
   215  0FEF                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0094                     	;# 
   251  0095                     	;# 
   252  0096                     	;# 
   253  0097                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009A                     	;# 
   257  009B                     	;# 
   258  009B                     	;# 
   259  009C                     	;# 
   260  009D                     	;# 
   261  009E                     	;# 
   262  010C                     	;# 
   263  010D                     	;# 
   264  0111                     	;# 
   265  0112                     	;# 
   266  0113                     	;# 
   267  0114                     	;# 
   268  0115                     	;# 
   269  0116                     	;# 
   270  0117                     	;# 
   271  0118                     	;# 
   272  0119                     	;# 
   273  011A                     	;# 
   274  011B                     	;# 
   275  011D                     	;# 
   276  011E                     	;# 
   277  018C                     	;# 
   278  018D                     	;# 
   279  0191                     	;# 
   280  0191                     	;# 
   281  0192                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0193                     	;# 
   285  0194                     	;# 
   286  0195                     	;# 
   287  0196                     	;# 
   288  0199                     	;# 
   289  019A                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019B                     	;# 
   294  019C                     	;# 
   295  019C                     	;# 
   296  019D                     	;# 
   297  019E                     	;# 
   298  019F                     	;# 
   299  020C                     	;# 
   300  020D                     	;# 
   301  0211                     	;# 
   302  0211                     	;# 
   303  0212                     	;# 
   304  0212                     	;# 
   305  0213                     	;# 
   306  0213                     	;# 
   307  0214                     	;# 
   308  0214                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0215                     	;# 
   312  0216                     	;# 
   313  0216                     	;# 
   314  0217                     	;# 
   315  0217                     	;# 
   316  0219                     	;# 
   317  021A                     	;# 
   318  021B                     	;# 
   319  021C                     	;# 
   320  021D                     	;# 
   321  021E                     	;# 
   322  021F                     	;# 
   323  0291                     	;# 
   324  0291                     	;# 
   325  0292                     	;# 
   326  0293                     	;# 
   327  0294                     	;# 
   328  0295                     	;# 
   329  0295                     	;# 
   330  0296                     	;# 
   331  0298                     	;# 
   332  0298                     	;# 
   333  0299                     	;# 
   334  029A                     	;# 
   335  029B                     	;# 
   336  029C                     	;# 
   337  029C                     	;# 
   338  029D                     	;# 
   339  029E                     	;# 
   340  029E                     	;# 
   341  0311                     	;# 
   342  0311                     	;# 
   343  0312                     	;# 
   344  0313                     	;# 
   345  0318                     	;# 
   346  0318                     	;# 
   347  0319                     	;# 
   348  031A                     	;# 
   349  0394                     	;# 
   350  0395                     	;# 
   351  0396                     	;# 
   352  039A                     	;# 
   353  039C                     	;# 
   354  039D                     	;# 
   355  039E                     	;# 
   356  039F                     	;# 
   357  0415                     	;# 
   358  0416                     	;# 
   359  0417                     	;# 
   360  041C                     	;# 
   361  041D                     	;# 
   362  041E                     	;# 
   363  0FE4                     	;# 
   364  0FE5                     	;# 
   365  0FE6                     	;# 
   366  0FE7                     	;# 
   367  0FE8                     	;# 
   368  0FE9                     	;# 
   369  0FEA                     	;# 
   370  0FEB                     	;# 
   371  0FED                     	;# 
   372  0FEE                     	;# 
   373  0FEF                     	;# 
   374                           
   375                           	psect	idataBANK0
   376  0168                     __pidataBANK0:
   377                           
   378                           ;initializer for _RENC_DATASHEET
   379  0168  3400               	retlw	0
   380  0169  3401               	retlw	1
   381  016A  34FF               	retlw	255
   382  016B  3400               	retlw	0
   383  016C  34FF               	retlw	255
   384  016D  3400               	retlw	0
   385  016E  3400               	retlw	0
   386  016F  3401               	retlw	1
   387  0170  3401               	retlw	1
   388  0171  3400               	retlw	0
   389  0172  3400               	retlw	0
   390  0173  34FF               	retlw	255
   391  0174  3400               	retlw	0
   392  0175  34FF               	retlw	255
   393  0176  3401               	retlw	1
   394  0177  3400               	retlw	0
   395                           
   396                           	psect	nvCOMMON
   397  007A                     __pnvCOMMON:
   398  007A                     _reData:
   399  007A                     	ds	2
   400  000C                     _PORTA	set	12
   401  000D                     _PORTB	set	13
   402  005F                     _GIE	set	95
   403  005E                     _PEIE	set	94
   404  005B                     _IOCIE	set	91
   405  008D                     _RCIF	set	141
   406  0058                     _IOCIF	set	88
   407  009D                     _ADCON0	set	157
   408  009E                     _ADCON1	set	158
   409  008D                     _TRISB	set	141
   410  008C                     _TRISA	set	140
   411  0099                     _OSCCON	set	153
   412  009B                     _ADRESL	set	155
   413  009D                     _ADCON0bits	set	157
   414  048D                     _RCIE	set	1165
   415  010D                     _LATBbits	set	269
   416  0117                     _FVRCON	set	279
   417  011E                     _APFCON1	set	286
   418  011D                     _APFCON0	set	285
   419  019D                     _RCSTA	set	413
   420  019E                     _TXSTA	set	414
   421  019B                     _SPBRGL	set	411
   422  019C                     _SPBRGH	set	412
   423  019F                     _BAUDCON	set	415
   424  018D                     _ANSELB	set	397
   425  018C                     _ANSELA	set	396
   426  0199                     _RCREG	set	409
   427  019A                     _TXREG	set	410
   428  0CF1                     _TRMT	set	3313
   429  0396                     _IOCBF	set	918
   430  0394                     _IOCBP	set	916
   431  0395                     _IOCBN	set	917
   432                           
   433                           	psect	stringtext1
   434  0116                     __pstringtext1:
   435  0116                     STR_2:
   436  0116  3430               	retlw	48	;'0'
   437  0117  3431               	retlw	49	;'1'
   438  0118  3432               	retlw	50	;'2'
   439  0119  3433               	retlw	51	;'3'
   440  011A  3434               	retlw	52	;'4'
   441  011B  3435               	retlw	53	;'5'
   442  011C  3436               	retlw	54	;'6'
   443  011D  3437               	retlw	55	;'7'
   444  011E  3438               	retlw	56	;'8'
   445  011F  3439               	retlw	57	;'9'
   446  0120  3461               	retlw	97	;'a'
   447  0121  3462               	retlw	98	;'b'
   448  0122  3463               	retlw	99	;'c'
   449  0123  3464               	retlw	100	;'d'
   450  0124  3465               	retlw	101	;'e'
   451  0125  3466               	retlw	102	;'f'
   452  0126  3467               	retlw	103	;'g'
   453  0127  3468               	retlw	104	;'h'
   454  0128  3469               	retlw	105	;'i'
   455  0129  346A               	retlw	106	;'j'
   456  012A  346B               	retlw	107	;'k'
   457  012B  346C               	retlw	108	;'l'
   458  012C  346D               	retlw	109	;'m'
   459  012D  346E               	retlw	110	;'n'
   460  012E  346F               	retlw	111	;'o'
   461  012F  3470               	retlw	112	;'p'
   462  0130  3471               	retlw	113	;'q'
   463  0131  3472               	retlw	114	;'r'
   464  0132  3473               	retlw	115	;'s'
   465  0133  3474               	retlw	116	;'t'
   466  0134  3475               	retlw	117	;'u'
   467  0135  3476               	retlw	118	;'v'
   468  0136  3477               	retlw	119	;'w'
   469  0137  3478               	retlw	120	;'x'
   470  0138  3479               	retlw	121	;'y'
   471  0139  347A               	retlw	122	;'z'
   472  013A  3441               	retlw	65	;'A'
   473  013B  3442               	retlw	66	;'B'
   474  013C  3443               	retlw	67	;'C'
   475  013D  3444               	retlw	68	;'D'
   476  013E  3445               	retlw	69	;'E'
   477  013F  3446               	retlw	70	;'F'
   478  0140  3447               	retlw	71	;'G'
   479  0141  3448               	retlw	72	;'H'
   480  0142  3449               	retlw	73	;'I'
   481  0143  344A               	retlw	74	;'J'
   482  0144  344B               	retlw	75	;'K'
   483  0145  344C               	retlw	76	;'L'
   484  0146  344D               	retlw	77	;'M'
   485  0147  344E               	retlw	78	;'N'
   486  0148  344F               	retlw	79	;'O'
   487  0149  3450               	retlw	80	;'P'
   488  014A  3451               	retlw	81	;'Q'
   489  014B  3452               	retlw	82	;'R'
   490  014C  3453               	retlw	83	;'S'
   491  014D  3454               	retlw	84	;'T'
   492  014E  3455               	retlw	85	;'U'
   493  014F  3456               	retlw	86	;'V'
   494  0150  3457               	retlw	87	;'W'
   495  0151  3458               	retlw	88	;'X'
   496  0152  3459               	retlw	89	;'Y'
   497  0153  345A               	retlw	90	;'Z'
   498  0154  342B               	retlw	43	;'+'
   499  0155  342D               	retlw	45	;'-'
   500  0156  3400               	retlw	0
   501                           
   502                           	psect	stringtext2
   503  0157                     __pstringtext2:
   504  0157                     STR_1:
   505  0157  3430               	retlw	48	;'0'
   506  0158  3431               	retlw	49	;'1'
   507  0159  3432               	retlw	50	;'2'
   508  015A  3433               	retlw	51	;'3'
   509  015B  3434               	retlw	52	;'4'
   510  015C  3435               	retlw	53	;'5'
   511  015D  3436               	retlw	54	;'6'
   512  015E  3437               	retlw	55	;'7'
   513  015F  3438               	retlw	56	;'8'
   514  0160  3439               	retlw	57	;'9'
   515  0161  3441               	retlw	65	;'A'
   516  0162  3442               	retlw	66	;'B'
   517  0163  3443               	retlw	67	;'C'
   518  0164  3444               	retlw	68	;'D'
   519  0165  3445               	retlw	69	;'E'
   520  0166  3446               	retlw	70	;'F'
   521  0167  3400               	retlw	0
   522                           
   523                           	psect	stringtext3
   524  0000                     __pstringtext3:
   525                           
   526                           	psect	cinit
   527  0056                     start_initialization:	
   528                           ; #config settings
   529                           
   530  0056                     __initialization:
   531                           
   532                           ; Initialize objects allocated to BANK0
   533  0056  3068               	movlw	low __pidataBANK0
   534  0057  0084               	movwf	4
   535  0058  3081               	movlw	(high __pidataBANK0)| (0+128)
   536  0059  0085               	movwf	5
   537  005A  3020               	movlw	low __pdataBANK0
   538  005B  0086               	movwf	6
   539  005C  3000               	movlw	high __pdataBANK0
   540  005D  0087               	movwf	7
   541  005E  3010               	movlw	16
   542  005F  3181  21AE  3180   	fcall	init_ram
   543                           
   544                           ; Clear objects allocated to COMMON
   545  0062  01F6               	clrf	__pbssCOMMON& (0+127)
   546  0063  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   547  0064  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   548  0065  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   549  0066                     end_of_initialization:	
   550                           ;End of C runtime variable initialization code
   551                           
   552  0066                     __end_of__initialization:
   553  0066  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   554  0067  0020               	movlb	0
   555  0068  3180  286A         	ljmp	_main	;jump to C main() function
   556                           
   557                           	psect	bssCOMMON
   558  0076                     __pbssCOMMON:
   559  0076                     _sendData:
   560  0076                     	ds	2
   561  0078                     _data:
   562  0078                     	ds	1
   563  0079                     _HD:
   564  0079                     	ds	1
   565                           
   566                           	psect	dataBANK0
   567  0020                     __pdataBANK0:
   568  0020                     _RENC_DATASHEET:
   569  0020                     	ds	16
   570                           
   571                           	psect	inittext
   572  01AE                     init_ram:
   573  01AE  00FE               	movwf	btemp
   574  01AF                     initloop:
   575  01AF  0012               	moviw fsr0++
   576  01B0  001E               	movwi fsr1++
   577  01B1  0BFE               	decfsz	btemp,f
   578  01B2  29AF               	goto	initloop
   579  01B3  3400               	retlw	0
   580                           
   581                           	psect	cstackCOMMON
   582  0070                     __pcstackCOMMON:
   583  0070                     ?_SendUART_Raw:
   584  0070                     ?_SendUART:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_SendUART64:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_ReadAD:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_OnInterrupt:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ??_OnInterrupt:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_main:	
   600                           ; 1 bytes @ 0x0
   601                           
   602                           
   603                           ; 1 bytes @ 0x0
   604  0070                     	ds	6
   605                           
   606                           	psect	cstackBANK0
   607  0030                     __pcstackBANK0:
   608  0030                     ??_SendUART_Raw:
   609  0030                     ??_ReadAD:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0030                     SendUART_Raw@c:	
   613                           ; 1 bytes @ 0x0
   614                           
   615                           
   616                           ; 1 bytes @ 0x0
   617  0030                     	ds	1
   618  0031                     ??_SendUART:
   619  0031                     ??_SendUART64:	
   620                           ; 1 bytes @ 0x1
   621                           
   622  0031                     SendUART@c:	
   623                           ; 1 bytes @ 0x1
   624                           
   625  0031                     SendUART64@c:	
   626                           ; 1 bytes @ 0x1
   627                           
   628                           
   629                           ; 1 bytes @ 0x1
   630  0031                     	ds	1
   631  0032                     ??_main:
   632                           
   633                           ; 1 bytes @ 0x2
   634  0032                     	ds	2
   635                           
   636                           	psect	maintext
   637  006A                     __pmaintext:	
   638 ;;
   639 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   640 ;;
   641 ;; *************** function _main *****************
   642 ;; Defined at:
   643 ;;		line 80 in file "main.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   652 ;; Tracked objects:
   653 ;;		On entry : B1F/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   657 ;;      Params:         0       0       0       0       0       0
   658 ;;      Locals:         0       0       0       0       0       0
   659 ;;      Temps:          0       2       0       0       0       0
   660 ;;      Totals:         0       2       0       0       0       0
   661 ;;Total ram usage:        2 bytes
   662 ;; Hardware stack levels required when called: 3
   663 ;; This function calls:
   664 ;;		_ReadAD
   665 ;;		_SendUART
   666 ;;		_SendUART64
   667 ;;		_SendUART_Raw
   668 ;; This function is called by:
   669 ;;		Startup code after reset
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           
   674                           ;psect for function _main
   675  006A                     _main:
   676  006A                     l916:	
   677                           ;incstack = 0
   678                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   679                           
   680                           
   681                           ;main.c: 82:     APFCON0= 0x00;
   682  006A  30F0               	movlw	240
   683  006B  0021               	movlb	1	; select bank1
   684  006C  0099               	movwf	25	;volatile
   685                           
   686                           ;main.c: 83:     APFCON1= 0x00;
   687  006D  3009               	movlw	9
   688  006E  0023               	movlb	3	; select bank3
   689  006F  008C               	movwf	12	;volatile
   690  0070                     l918:
   691                           
   692                           ;main.c: 84:     BAUDCON= 0x08;
   693  0070  018D               	clrf	13	;volatile
   694  0071                     l920:
   695                           
   696                           ;main.c: 85:     SPBRGH = 0x00;
   697  0071  30FF               	movlw	255
   698  0072  0021               	movlb	1	; select bank1
   699  0073  008C               	movwf	12	;volatile
   700  0074                     l922:
   701                           
   702                           ;main.c: 86:     SPBRGL = 0x44;
   703  0074  30FA               	movlw	250
   704  0075  008D               	movwf	13	;volatile
   705  0076                     l924:
   706                           
   707                           ;main.c: 87:     TXSTA = 0x24;
   708  0076  0020               	movlb	0	; select bank0
   709  0077  018D               	clrf	13	;volatile
   710  0078  018C               	clrf	12	;volatile
   711  0079                     l926:
   712                           
   713                           ;main.c: 88:     RCSTA = 0x90;
   714  0079  0022               	movlb	2	; select bank2
   715  007A  019D               	clrf	29	;volatile
   716  007B                     l928:
   717                           
   718                           ;main.c: 89:     FVRCON = 0x00;
   719  007B  019E               	clrf	30	;volatile
   720                           
   721                           ;main.c: 90:     ADCON1 = 0x50;
   722  007C  3008               	movlw	8
   723  007D  0023               	movlb	3	; select bank3
   724  007E  009F               	movwf	31	;volatile
   725  007F                     l930:
   726                           
   727                           ;main.c: 91:     IOCBN = 0x30;
   728  007F  019C               	clrf	28	;volatile
   729  0080                     l932:
   730                           
   731                           ;main.c: 92:     IOCBP = 0x30;
   732  0080  3044               	movlw	68
   733  0081  009B               	movwf	27	;volatile
   734  0082                     l934:
   735                           
   736                           ;main.c: 93:     IOCBF = 0;
   737  0082  3024               	movlw	36
   738  0083  009E               	movwf	30	;volatile
   739  0084                     l936:
   740                           
   741                           ;main.c: 94:     IOCIE = 1;
   742  0084  3090               	movlw	144
   743  0085  009D               	movwf	29	;volatile
   744                           
   745                           ;main.c: 95:     RCIF = 0;
   746  0086  0022               	movlb	2	; select bank2
   747  0087  0197               	clrf	23	;volatile
   748  0088                     l938:
   749                           
   750                           ;main.c: 96:     RCIE = 1;
   751  0088  3050               	movlw	80
   752  0089  0021               	movlb	1	; select bank1
   753  008A  009E               	movwf	30	;volatile
   754  008B                     l940:
   755                           
   756                           ;main.c: 97:     PEIE = 1;
   757  008B  3030               	movlw	48
   758  008C  0027               	movlb	7	; select bank7
   759  008D  0095               	movwf	21	;volatile
   760  008E                     l942:
   761                           
   762                           ;main.c: 98:     GIE = 1;
   763  008E  3030               	movlw	48
   764  008F  0094               	movwf	20	;volatile
   765  0090                     l944:
   766                           
   767                           ;main.c: 99:     reData = 8000000;
   768  0090  0196               	clrf	22	;volatile
   769  0091                     l946:
   770                           
   771                           ;main.c: 100:     data.RENC_LDAT = PORTB >> 4 & 0x3;
   772  0091  158B               	bsf	11,3	;volatile
   773  0092                     l948:
   774                           
   775                           ;main.c: 101:     LATBbits.LATB0 = 1;
   776  0092  0020               	movlb	0	; select bank0
   777  0093  1291               	bcf	17,5	;volatile
   778  0094                     l950:
   779                           
   780                           ;main.c: 102:     for (;;)
   781  0094  0021               	movlb	1	; select bank1
   782  0095  1691               	bsf	17,5	;volatile
   783  0096                     l952:
   784                           
   785                           ;main.c: 103:     {
   786  0096  170B               	bsf	11,6	;volatile
   787  0097                     l954:
   788                           
   789                           ;main.c: 104:         while(!data.SendFlag);
   790  0097  178B               	bsf	11,7	;volatile
   791                           
   792                           ;main.c: 105: 
   793  0098  3000               	movlw	0
   794  0099  00FA               	movwf	_reData
   795  009A  3012               	movlw	18
   796  009B  00FB               	movwf	_reData+1
   797  009C                     l956:
   798                           
   799                           ;main.c: 106: 
   800  009C  0020               	movlb	0	; select bank0
   801  009D  080D               	movf	13,w	;volatile
   802  009E  00B2               	movwf	??_main
   803  009F  3004               	movlw	4
   804  00A0                     u225:
   805  00A0  36B2               	lsrf	??_main,f
   806  00A1  0B89               	decfsz	9,f
   807  00A2  28A0               	goto	u225
   808  00A3  0832               	movf	??_main,w
   809  00A4  3903               	andlw	3
   810  00A5  00B3               	movwf	??_main+1
   811  00A6  0DB3               	rlf	??_main+1,f
   812  00A7  0878               	movf	_data,w
   813  00A8  0633               	xorwf	??_main+1,w
   814  00A9  39F9               	andlw	-7
   815  00AA  0633               	xorwf	??_main+1,w
   816  00AB  00F8               	movwf	_data
   817  00AC                     l958:
   818                           
   819                           ;main.c: 107:         ADCON0 = 0x01;
   820  00AC  0022               	movlb	2	; select bank2
   821  00AD  140D               	bsf	13,0	;volatile
   822  00AE                     l110:
   823  00AE  1C78               	btfss	_data,0
   824  00AF  28B1               	goto	u231
   825  00B0  28B2               	goto	u230
   826  00B1                     u231:
   827  00B1  28AE               	goto	l110
   828  00B2                     u230:
   829  00B2                     l960:
   830                           
   831                           ;main.c: 113:         ADCON0 = 0x0D;
   832  00B2  3001               	movlw	1
   833  00B3  0021               	movlb	1	; select bank1
   834  00B4  009D               	movwf	29	;volatile
   835  00B5                     l962:
   836                           
   837                           ;main.c: 114:         HD = ReadAD();
   838  00B5  3181  2194  3180   	fcall	_ReadAD
   839  00B8  0020               	movlb	0	; select bank0
   840  00B9  00B2               	movwf	??_main
   841  00BA  0832               	movf	??_main,w
   842  00BB  00F9               	movwf	_HD
   843  00BC                     l964:
   844                           
   845                           ;main.c: 115:         SendUART(HD >> 4);
   846  00BC  0879               	movf	_HD,w
   847  00BD  00B2               	movwf	??_main
   848  00BE  3004               	movlw	4
   849  00BF                     u245:
   850  00BF  36B2               	lsrf	??_main,f
   851  00C0  0B89               	decfsz	9,f
   852  00C1  28BF               	goto	u245
   853  00C2  0832               	movf	??_main,w
   854  00C3  3181  2186  3180   	fcall	_SendUART
   855  00C6                     l966:
   856                           
   857                           ;main.c: 116:         SendUART(HD & 0xF);
   858  00C6  0879               	movf	_HD,w
   859  00C7  390F               	andlw	15
   860  00C8  3181  2186  3180   	fcall	_SendUART
   861  00CB                     l968:
   862                           
   863                           ;main.c: 119:         sendData = reData;
   864  00CB  300D               	movlw	13
   865  00CC  0021               	movlb	1	; select bank1
   866  00CD  009D               	movwf	29	;volatile
   867                           
   868                           ;main.c: 120:         SendUART64(sendData >> 18);
   869  00CE  3181  2194  3180   	fcall	_ReadAD
   870  00D1  0020               	movlb	0	; select bank0
   871  00D2  00B2               	movwf	??_main
   872  00D3  0832               	movf	??_main,w
   873  00D4  00F9               	movwf	_HD
   874  00D5                     l970:
   875                           
   876                           ;main.c: 121:         SendUART64(sendData >> 12 & 0x3F);
   877  00D5  0879               	movf	_HD,w
   878  00D6  00B2               	movwf	??_main
   879  00D7  3004               	movlw	4
   880  00D8                     u255:
   881  00D8  36B2               	lsrf	??_main,f
   882  00D9  0B89               	decfsz	9,f
   883  00DA  28D8               	goto	u255
   884  00DB  0832               	movf	??_main,w
   885  00DC  3181  2186  3180   	fcall	_SendUART
   886  00DF                     l972:
   887                           
   888                           ;main.c: 122:         SendUART64(sendData >> 6 & 0x3F);
   889  00DF  0879               	movf	_HD,w
   890  00E0  390F               	andlw	15
   891  00E1  3181  2186  3180   	fcall	_SendUART
   892  00E4                     l974:
   893                           
   894                           ;main.c: 125: 
   895  00E4  087B               	movf	_reData+1,w
   896  00E5  00F7               	movwf	_sendData+1
   897  00E6  087A               	movf	_reData,w
   898  00E7  00F6               	movwf	_sendData
   899  00E8                     l976:
   900                           
   901                           ;main.c: 126:         SendUART_Raw('\n');
   902  00E8  0876               	movf	_sendData,w
   903  00E9  3181  2178  3180   	fcall	_SendUART64
   904  00EC                     l978:
   905                           
   906                           ;main.c: 127:         data.SendFlag = 0;
   907  00EC  0877               	movf	_sendData+1,w
   908  00ED  0020               	movlb	0	; select bank0
   909  00EE  00B3               	movwf	??_main+1
   910  00EF  0876               	movf	_sendData,w
   911  00F0  00B2               	movwf	??_main
   912  00F1  0E33               	swapf	??_main+1,w
   913  00F2  390F               	andlw	15
   914  00F3  00B2               	movwf	??_main
   915  00F4  01B3               	clrf	??_main+1
   916  00F5  0832               	movf	??_main,w
   917  00F6  393F               	andlw	63
   918  00F7  3181  2178  3180   	fcall	_SendUART64
   919  00FA                     l980:
   920                           
   921                           ;main.c: 128:     }
   922  00FA  0877               	movf	_sendData+1,w
   923  00FB  0020               	movlb	0	; select bank0
   924  00FC  00B3               	movwf	??_main+1
   925  00FD  0876               	movf	_sendData,w
   926  00FE  00B2               	movwf	??_main
   927  00FF  3006               	movlw	6
   928  0100                     u265:
   929  0100  36B3               	lsrf	??_main+1,f
   930  0101  0CB2               	rrf	??_main,f
   931  0102  0B89               	decfsz	9,f
   932  0103  2900               	goto	u265
   933  0104  0832               	movf	??_main,w
   934  0105  393F               	andlw	63
   935  0106  3181  2178  3180   	fcall	_SendUART64
   936  0109                     l982:
   937                           
   938                           ;main.c: 129: 
   939  0109  0876               	movf	_sendData,w
   940  010A  393F               	andlw	63
   941  010B  3181  2178  3180   	fcall	_SendUART64
   942  010E                     l984:
   943  010E  300A               	movlw	10
   944  010F  3181  21A2  3180   	fcall	_SendUART_Raw
   945  0112                     l986:
   946  0112  1078               	bcf	_data,0
   947  0113  28AE               	goto	l110
   948  0114  3180  2854         	ljmp	start
   949  0116                     __end_of_main:
   950                           
   951                           	psect	text1
   952  0178                     __ptext1:	
   953 ;; *************** function _SendUART64 *****************
   954 ;; Defined at:
   955 ;;		line 44 in file "main.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  c               1    wreg     unsigned char 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  c               1    1[BANK0 ] unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   969 ;;      Params:         0       0       0       0       0       0
   970 ;;      Locals:         0       1       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0
   972 ;;      Totals:         0       1       0       0       0       0
   973 ;;Total ram usage:        1 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 2
   976 ;; This function calls:
   977 ;;		_SendUART_Raw
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           
   984                           ;psect for function _SendUART64
   985  0178                     _SendUART64:
   986                           
   987                           ;incstack = 0
   988                           ; Regs used in _SendUART64: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   989                           ;SendUART64@c stored from wreg
   990  0178  0020               	movlb	0	; select bank0
   991  0179  00B1               	movwf	SendUART64@c
   992  017A                     l906:
   993                           
   994                           ;main.c: 44: ;main.c: 45: unsigned char ReadAD();main.c: 46: {
   995  017A  0831               	movf	SendUART64@c,w
   996  017B  3E16               	addlw	low (STR_2| (0+32768))
   997  017C  0084               	movwf	4
   998  017D  3081               	movlw	high (STR_2| (0+32768))
   999  017E  1803               	skipnc
  1000  017F  3E01               	addlw	1
  1001  0180  0085               	movwf	5
  1002  0181  0800               	movf	0,w	;code access
  1003  0182  3181  21A2  3181   	fcall	_SendUART_Raw
  1004  0185                     l88:
  1005  0185  0008               	return
  1006  0186                     __end_of_SendUART64:
  1007                           
  1008                           	psect	text2
  1009  0186                     __ptext2:	
  1010 ;; *************** function _SendUART *****************
  1011 ;; Defined at:
  1012 ;;		line 38 in file "main.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;  c               1    wreg     unsigned char 
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  c               1    1[BANK0 ] unsigned char 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1026 ;;      Params:         0       0       0       0       0       0
  1027 ;;      Locals:         0       1       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0
  1029 ;;      Totals:         0       1       0       0       0       0
  1030 ;;Total ram usage:        1 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; Hardware stack levels required when called: 2
  1033 ;; This function calls:
  1034 ;;		_SendUART_Raw
  1035 ;; This function is called by:
  1036 ;;		_main
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           
  1041                           ;psect for function _SendUART
  1042  0186                     _SendUART:
  1043                           
  1044                           ;incstack = 0
  1045                           ; Regs used in _SendUART: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1046                           ;SendUART@c stored from wreg
  1047  0186  0020               	movlb	0	; select bank0
  1048  0187  00B1               	movwf	SendUART@c
  1049  0188                     l904:
  1050                           
  1051                           ;main.c: 38: void SendUART64(unsigned char c);main.c: 39: {;main.c: 40:     SendUART_Raw
      +                          ("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+-"[c]);
  1052  0188  0831               	movf	SendUART@c,w
  1053  0189  3E57               	addlw	low (STR_1| (0+32768))
  1054  018A  0084               	movwf	4
  1055  018B  3081               	movlw	high (STR_1| (0+32768))
  1056  018C  1803               	skipnc
  1057  018D  3E01               	addlw	1
  1058  018E  0085               	movwf	5
  1059  018F  0800               	movf	0,w	;code access
  1060  0190  3181  21A2  3181   	fcall	_SendUART_Raw
  1061  0193                     l85:
  1062  0193  0008               	return
  1063  0194                     __end_of_SendUART:
  1064                           
  1065                           	psect	text3
  1066  01A2                     __ptext3:	
  1067 ;; *************** function _SendUART_Raw *****************
  1068 ;; Defined at:
  1069 ;;		line 32 in file "main.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  c               1    wreg     unsigned char 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  c               1    0[BANK0 ] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1083 ;;      Params:         0       0       0       0       0       0
  1084 ;;      Locals:         0       1       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0
  1086 ;;      Totals:         0       1       0       0       0       0
  1087 ;;Total ram usage:        1 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; Hardware stack levels required when called: 1
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		_SendUART
  1094 ;;		_SendUART64
  1095 ;;		_main
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function _SendUART_Raw
  1101  01A2                     _SendUART_Raw:
  1102                           
  1103                           ;incstack = 0
  1104                           ; Regs used in _SendUART_Raw: [wreg]
  1105                           ;SendUART_Raw@c stored from wreg
  1106  01A2  0020               	movlb	0	; select bank0
  1107  01A3  00B0               	movwf	SendUART_Raw@c
  1108  01A4                     l900:
  1109  01A4                     l79:	
  1110                           ;main.c: 32: void SendUART(unsigned char c);main.c: 33: {;main.c: 34:     SendUART_Raw("
      +                          0123456789ABCDEF"[c]);
  1111                           
  1112  01A4  0023               	movlb	3	; select bank3
  1113  01A5  1C9E               	btfss	30,1	;volatile
  1114  01A6  29A8               	goto	u201
  1115  01A7  29A9               	goto	u200
  1116  01A8                     u201:
  1117  01A8  29A4               	goto	l79
  1118  01A9                     u200:
  1119  01A9                     l902:
  1120                           
  1121                           ;main.c: 35: }
  1122  01A9  0020               	movlb	0	; select bank0
  1123  01AA  0830               	movf	SendUART_Raw@c,w
  1124  01AB  0023               	movlb	3	; select bank3
  1125  01AC  009A               	movwf	26	;volatile
  1126  01AD                     l82:
  1127  01AD  0008               	return
  1128  01AE                     __end_of_SendUART_Raw:
  1129                           
  1130                           	psect	text4
  1131  0194                     __ptext4:	
  1132 ;; *************** function _ReadAD *****************
  1133 ;; Defined at:
  1134 ;;		line 51 in file "main.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;		None
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      unsigned char 
  1141 ;; Registers used:
  1142 ;;		wreg
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1148 ;;      Params:         0       0       0       0       0       0
  1149 ;;      Locals:         0       0       0       0       0       0
  1150 ;;      Temps:          0       0       0       0       0       0
  1151 ;;      Totals:         0       0       0       0       0       0
  1152 ;;Total ram usage:        0 bytes
  1153 ;; Hardware stack levels used: 1
  1154 ;; Hardware stack levels required when called: 1
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           
  1163                           ;psect for function _ReadAD
  1164  0194                     _ReadAD:
  1165  0194                     l908:	
  1166                           ;incstack = 0
  1167                           ; Regs used in _ReadAD: [wreg]
  1168                           
  1169                           
  1170                           ;main.c: 53: 
  1171  0194  3085               	movlw	133
  1172  0195                     u277:
  1173  0195  0B89               	decfsz	9,f
  1174  0196  2995               	goto	u277
  1175  0197  0000               	nop
  1176  0198                     l910:
  1177                           
  1178                           ;main.c: 54: 
  1179  0198  0021               	movlb	1	; select bank1
  1180  0199  149D               	bsf	29,1	;volatile
  1181  019A  0000               	nop	;# 
  1182  019B                     l91:	
  1183                           ;main.c: 56: void __attribute__((picinterrupt(("")))) OnInterrupt(void)
  1184                           
  1185  019B  0021               	movlb	1	; select bank1
  1186  019C  189D               	btfsc	29,1	;volatile
  1187  019D  299F               	goto	u211
  1188  019E  29A0               	goto	u210
  1189  019F                     u211:
  1190  019F  299B               	goto	l91
  1191  01A0                     u210:
  1192  01A0                     l912:
  1193                           
  1194                           ;main.c: 57: {
  1195  01A0  081B               	movf	27,w	;volatile
  1196  01A1                     l94:
  1197  01A1  0008               	return
  1198  01A2                     __end_of_ReadAD:
  1199                           
  1200                           	psect	intentry
  1201  0004                     __pintentry:	
  1202 ;; *************** function _OnInterrupt *****************
  1203 ;; Defined at:
  1204 ;;		line 62 in file "main.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1218 ;;      Params:         0       0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0       0
  1220 ;;      Temps:          6       0       0       0       0       0
  1221 ;;      Totals:         6       0       0       0       0       0
  1222 ;;Total ram usage:        6 bytes
  1223 ;; Hardware stack levels used: 1
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		Interrupt level 1
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231  0004                     _OnInterrupt:
  1232                           
  1233                           ;incstack = 0
  1234  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1235                           
  1236                           ; Regs used in _OnInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  1237  0005  3180               	pagesel	$
  1238  0006                     i1l738:
  1239                           
  1240                           ;main.c: 64:     if (RCIF)
  1241  0006  1C0B               	btfss	11,0	;volatile
  1242  0007  2809               	goto	u3_21
  1243  0008  280A               	goto	u3_20
  1244  0009                     u3_21:
  1245  0009  2838               	goto	i1l744
  1246  000A                     u3_20:
  1247  000A                     i1l740:
  1248                           
  1249                           ;main.c: 65:     {;main.c: 66:         if(RCREG == '\n') data.SendFlag = 1;
  1250  000A  0C78               	rrf	_data,w
  1251  000B  3903               	andlw	3
  1252  000C  00F0               	movwf	??_OnInterrupt
  1253  000D  3002               	movlw	2
  1254  000E                     u4_25:
  1255  000E  35F0               	lslf	??_OnInterrupt,f
  1256  000F  0B89               	decfsz	9,f
  1257  0010  280E               	goto	u4_25
  1258  0011  3020               	movlw	(low (_RENC_DATASHEET| 0))& (0+255)
  1259  0012  0770               	addwf	??_OnInterrupt,w
  1260  0013  00F1               	movwf	??_OnInterrupt+1
  1261  0014  0020               	movlb	0	; select bank0
  1262  0015  080D               	movf	13,w	;volatile
  1263  0016  00F2               	movwf	??_OnInterrupt+2
  1264  0017  3004               	movlw	4
  1265  0018                     u5_25:
  1266  0018  36F2               	lsrf	??_OnInterrupt+2,f
  1267  0019  0B89               	decfsz	9,f
  1268  001A  2818               	goto	u5_25
  1269  001B  0872               	movf	??_OnInterrupt+2,w
  1270  001C  3903               	andlw	3
  1271  001D  0771               	addwf	??_OnInterrupt+1,w
  1272  001E  00F3               	movwf	??_OnInterrupt+3
  1273  001F  0873               	movf	??_OnInterrupt+3,w
  1274  0020  0086               	movwf	6
  1275  0021  0187               	clrf	7
  1276  0022  0801               	movf	1,w
  1277  0023  00F4               	movwf	??_OnInterrupt+4
  1278  0024  01F5               	clrf	??_OnInterrupt+5
  1279  0025  0874               	movf	??_OnInterrupt+4,w
  1280  0026  07FA               	addwf	_reData,f
  1281  0027  0875               	movf	??_OnInterrupt+5,w
  1282  0028  3DFB               	addwfc	_reData+1,f
  1283  0029                     i1l742:
  1284                           
  1285                           ;main.c: 67:         else if(RCREG == 'r') reData = 8000000;
  1286  0029  080D               	movf	13,w	;volatile
  1287  002A  00F0               	movwf	??_OnInterrupt
  1288  002B  3004               	movlw	4
  1289  002C                     u6_25:
  1290  002C  36F0               	lsrf	??_OnInterrupt,f
  1291  002D  0B89               	decfsz	9,f
  1292  002E  282C               	goto	u6_25
  1293  002F  0870               	movf	??_OnInterrupt,w
  1294  0030  3903               	andlw	3
  1295  0031  00F1               	movwf	??_OnInterrupt+1
  1296  0032  0DF1               	rlf	??_OnInterrupt+1,f
  1297  0033  0878               	movf	_data,w
  1298  0034  0671               	xorwf	??_OnInterrupt+1,w
  1299  0035  39F9               	andlw	-7
  1300  0036  0671               	xorwf	??_OnInterrupt+1,w
  1301  0037  00F8               	movwf	_data
  1302  0038                     i1l744:
  1303                           
  1304                           ;main.c: 70: }
  1305  0038  0020               	movlb	0	; select bank0
  1306  0039  1E91               	btfss	17,5	;volatile
  1307  003A  283C               	goto	u7_21
  1308  003B  283D               	goto	u7_20
  1309  003C                     u7_21:
  1310  003C  2852               	goto	i1l104
  1311  003D                     u7_20:
  1312  003D                     i1l746:
  1313                           
  1314                           ;main.c: 71: ;main.c: 72: 
  1315  003D  300A               	movlw	10
  1316  003E  0023               	movlb	3	; select bank3
  1317  003F  0619               	xorwf	25,w	;volatile
  1318  0040  1D03               	btfss	3,2
  1319  0041  2843               	goto	u8_21
  1320  0042  2844               	goto	u8_20
  1321  0043                     u8_21:
  1322  0043  2846               	goto	i1l750
  1323  0044                     u8_20:
  1324  0044                     i1l748:
  1325  0044  1478               	bsf	_data,0
  1326  0045  2850               	goto	i1l754
  1327  0046                     i1l750:
  1328  0046  3072               	movlw	114
  1329  0047  0619               	xorwf	25,w	;volatile
  1330  0048  1D03               	btfss	3,2
  1331  0049  284B               	goto	u9_21
  1332  004A  284C               	goto	u9_20
  1333  004B                     u9_21:
  1334  004B  2850               	goto	i1l754
  1335  004C                     u9_20:
  1336  004C                     i1l752:
  1337  004C  3000               	movlw	0
  1338  004D  00FA               	movwf	_reData
  1339  004E  3012               	movlw	18
  1340  004F  00FB               	movwf	_reData+1
  1341  0050                     i1l754:
  1342                           
  1343                           ;main.c: 74: void main()
  1344  0050  0020               	movlb	0	; select bank0
  1345  0051  1291               	bcf	17,5	;volatile
  1346  0052                     i1l104:
  1347  0052  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1348  0053  0009               	retfie
  1349  0054                     __end_of_OnInterrupt:
  1350  007E                     btemp	set	126	;btemp
  1351  007E                     int$flags	set	126
  1352  007E                     wtemp0	set	126
  1353                           
  1354                           	psect	config
  1355                           
  1356                           ;Config register CONFIG1 @ 0x8007
  1357                           ;	Oscillator Selection
  1358                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1359                           ;	Watchdog Timer Enable
  1360                           ;	WDTE = OFF, WDT disabled
  1361                           ;	Power-up Timer Enable
  1362                           ;	PWRTE = ON, PWRT enabled
  1363                           ;	MCLR Pin Function Select
  1364                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1365                           ;	Flash Program Memory Code Protection
  1366                           ;	CP = OFF, Program memory code protection is disabled
  1367                           ;	Data Memory Code Protection
  1368                           ;	CPD = OFF, Data memory code protection is disabled
  1369                           ;	Brown-out Reset Enable
  1370                           ;	BOREN = ON, Brown-out Reset enabled
  1371                           ;	Clock Out Enable
  1372                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1373                           ;	Internal/External Switchover
  1374                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1375                           ;	Fail-Safe Clock Monitor Enable
  1376                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1377  8007                     	org	32775
  1378  8007  0F84               	dw	3972
  1379                           
  1380                           ;Config register CONFIG2 @ 0x8008
  1381                           ;	Flash Memory Self-Write Protection
  1382                           ;	WRT = OFF, Write protection off
  1383                           ;	PLL Enable
  1384                           ;	PLLEN = OFF, 4x PLL disabled
  1385                           ;	Stack Overflow/Underflow Reset Enable
  1386                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1387                           ;	Brown-out Reset Voltage Selection
  1388                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  1389                           ;	Low-Voltage Programming Enable
  1390                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1391  8008                     	org	32776
  1392  8008  1AFF               	dw	6911

Data Sizes:
    Strings     82
    Constant    0
    Data        16
    BSS         4
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      4      20
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _OnInterrupt in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_SendUART
    _main->_SendUART64
    _SendUART64->_SendUART_Raw
    _SendUART->_SendUART_Raw

Critical Paths under _OnInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _OnInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _OnInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _OnInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _OnInterrupt in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     110
                                              2 BANK0      2     2      0
                             _ReadAD
                           _SendUART
                         _SendUART64
                       _SendUART_Raw
 ---------------------------------------------------------------------------------
 (1) _SendUART64                                           1     1      0      44
                                              1 BANK0      1     1      0
                       _SendUART_Raw
 ---------------------------------------------------------------------------------
 (1) _SendUART                                             1     1      0      44
                                              1 BANK0      1     1      0
                       _SendUART_Raw
 ---------------------------------------------------------------------------------
 (1) _SendUART_Raw                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadAD                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _OnInterrupt                                          6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadAD
   _SendUART
     _SendUART_Raw
   _SendUART64
     _SendUART_Raw
   _SendUART_Raw

 _OnInterrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      20       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      4      14       6       25.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      20      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 22 13:27:21 2022

                     _HD 0079                       l82 01AD                       l91 019B  
                     l85 0193                       l94 01A1                       l79 01A4  
                     l88 0185                      l110 00AE                      l900 01A4  
                    l910 0198                      l902 01A9                      l912 01A0  
                    l904 0188                      l920 0071                      l906 017A  
                    l930 007F                      l922 0074                      l908 0194  
                    l940 008B                      l932 0080                      l924 0076  
                    l916 006A                      l950 0094                      l942 008E  
                    l934 0082                      l926 0079                      l918 0070  
                    l960 00B2                      l952 0096                      l944 0090  
                    l936 0084                      l928 007B                      l970 00D5  
                    l962 00B5                      l954 0097                      l946 0091  
                    l938 0088                      l980 00FA                      l972 00DF  
                    l964 00BC                      l956 009C                      l948 0092  
                    l982 0109                      l974 00E4                      l966 00C6  
                    l958 00AC                      l984 010E                      l976 00E8  
                    l968 00CB                      l986 0112                      l978 00EC  
                    _GIE 005F                      u200 01A9                      u201 01A8  
                    u210 01A0                      u211 019F                      u230 00B2  
                    u231 00B1                      u225 00A0                      u245 00BF  
                    u255 00D8                      u265 0100                      u277 0195  
                    wreg 0009                     STR_1 0157                     STR_2 0116  
                   _PEIE 005E                     _RCIE 048D                     _RCIF 008D  
                   _TRMT 0CF1                     u3_20 000A                     u3_21 0009  
                   u4_25 000E                     u5_25 0018                     u6_25 002C  
                   u7_20 003D                     u7_21 003C                     u8_20 0044  
                   u8_21 0043                     u9_20 004C                     u9_21 004B  
                   _data 0078                     _main 006A                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   start 0054            ??_OnInterrupt 0070                    ?_main 0070  
                  _IOCBF 0396                    _IOCBN 0395                    _IOCBP 0394  
                  _IOCIE 005B                    _IOCIF 0058                    i1l104 0052  
                  i1l740 000A                    i1l750 0046                    i1l742 0029  
                  i1l752 004C                    i1l744 0038                    i1l754 0050  
                  i1l746 003D                    i1l738 0006                    i1l748 0044  
                  _RCREG 0199                    _RCSTA 019D                    _PORTA 000C  
                  _PORTB 000D                    _TRISA 008C                    _TRISB 008D  
                  _TXREG 019A                    _TXSTA 019E                    status 0003  
                  wtemp0 007E          __initialization 0056             __end_of_main 0116  
    __end_of_OnInterrupt 0054         __end_of_SendUART 0194                   ??_main 0032  
             _SendUART64 0178                   _ADCON0 009D                   _ADCON1 009E  
                 _ADRESL 009B                   _ANSELA 018C                   _ANSELB 018D  
          ?_SendUART_Raw 0070                   _FVRCON 0117                   _OSCCON 0099  
                 _SPBRGH 019C                   _SPBRGL 019B                   _ReadAD 0194  
            SendUART64@c 0031                   _reData 007A           ??_SendUART_Raw 0030  
__end_of__initialization 0066              _OnInterrupt 0004           __pcstackCOMMON 0070  
           __pidataBANK0 0168              ?_SendUART64 0070               __pnvCOMMON 007A  
              ?_SendUART 0070                  ?_ReadAD 0070               __pmaintext 006A  
             __pintentry 0004                  _BAUDCON 019F                  _APFCON0 011D  
                _APFCON1 011E               ??_SendUART 0031      __size_of_SendUART64 000E  
        __size_of_ReadAD 000E     __end_of_SendUART_Raw 01AE                  __ptext1 0178  
                __ptext2 0186                  __ptext3 01A2                  __ptext4 0194  
   end_of_initialization 0066                  init_ram 01AE                  initloop 01AF  
           ?_OnInterrupt 0070           __end_of_ReadAD 01A2                SendUART@c 0031  
           ??_SendUART64 0031      start_initialization 0056                 ??_ReadAD 0030  
  __size_of_SendUART_Raw 000C        __size_of_SendUART 000E       __end_of_SendUART64 0186  
            __pdataBANK0 0020              __pbssCOMMON 0076                ___latbits 0001  
          __pcstackBANK0 0030             _SendUART_Raw 01A2           _RENC_DATASHEET 0020  
               _LATBbits 010D     __size_of_OnInterrupt 0050               _ADCON0bits 009D  
               _SendUART 0186            SendUART_Raw@c 0030            __size_of_main 00AC  
               _sendData 0076                 int$flags 007E                 intlevel1 0000  
          __pstringtext1 0116            __pstringtext2 0157            __pstringtext3 0000  
