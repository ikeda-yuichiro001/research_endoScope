

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 26 13:54:50 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F1827 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0097                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009A                     	;# 
    98  009B                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0113                     	;# 
   108  0114                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011A                     	;# 
   115  011B                     	;# 
   116  011D                     	;# 
   117  011E                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  0191                     	;# 
   121  0191                     	;# 
   122  0192                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0194                     	;# 
   127  0195                     	;# 
   128  0196                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019C                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  020C                     	;# 
   141  020D                     	;# 
   142  0211                     	;# 
   143  0211                     	;# 
   144  0212                     	;# 
   145  0212                     	;# 
   146  0213                     	;# 
   147  0213                     	;# 
   148  0214                     	;# 
   149  0214                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0216                     	;# 
   154  0216                     	;# 
   155  0217                     	;# 
   156  0217                     	;# 
   157  0219                     	;# 
   158  021A                     	;# 
   159  021B                     	;# 
   160  021C                     	;# 
   161  021D                     	;# 
   162  021E                     	;# 
   163  021F                     	;# 
   164  0291                     	;# 
   165  0291                     	;# 
   166  0292                     	;# 
   167  0293                     	;# 
   168  0294                     	;# 
   169  0295                     	;# 
   170  0295                     	;# 
   171  0296                     	;# 
   172  0298                     	;# 
   173  0298                     	;# 
   174  0299                     	;# 
   175  029A                     	;# 
   176  029B                     	;# 
   177  029C                     	;# 
   178  029C                     	;# 
   179  029D                     	;# 
   180  029E                     	;# 
   181  029E                     	;# 
   182  0311                     	;# 
   183  0311                     	;# 
   184  0312                     	;# 
   185  0313                     	;# 
   186  0318                     	;# 
   187  0318                     	;# 
   188  0319                     	;# 
   189  031A                     	;# 
   190  0394                     	;# 
   191  0395                     	;# 
   192  0396                     	;# 
   193  039A                     	;# 
   194  039C                     	;# 
   195  039D                     	;# 
   196  039E                     	;# 
   197  039F                     	;# 
   198  0415                     	;# 
   199  0416                     	;# 
   200  0417                     	;# 
   201  041C                     	;# 
   202  041D                     	;# 
   203  041E                     	;# 
   204  0FE4                     	;# 
   205  0FE5                     	;# 
   206  0FE6                     	;# 
   207  0FE7                     	;# 
   208  0FE8                     	;# 
   209  0FE9                     	;# 
   210  0FEA                     	;# 
   211  0FEB                     	;# 
   212  0FED                     	;# 
   213  0FEE                     	;# 
   214  0FEF                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0094                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  010C                     	;# 
   262  010D                     	;# 
   263  0111                     	;# 
   264  0112                     	;# 
   265  0113                     	;# 
   266  0114                     	;# 
   267  0115                     	;# 
   268  0116                     	;# 
   269  0117                     	;# 
   270  0118                     	;# 
   271  0119                     	;# 
   272  011A                     	;# 
   273  011B                     	;# 
   274  011D                     	;# 
   275  011E                     	;# 
   276  018C                     	;# 
   277  018D                     	;# 
   278  0191                     	;# 
   279  0191                     	;# 
   280  0192                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0194                     	;# 
   285  0195                     	;# 
   286  0196                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019C                     	;# 
   294  019C                     	;# 
   295  019D                     	;# 
   296  019E                     	;# 
   297  019F                     	;# 
   298  020C                     	;# 
   299  020D                     	;# 
   300  0211                     	;# 
   301  0211                     	;# 
   302  0212                     	;# 
   303  0212                     	;# 
   304  0213                     	;# 
   305  0213                     	;# 
   306  0214                     	;# 
   307  0214                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0216                     	;# 
   312  0216                     	;# 
   313  0217                     	;# 
   314  0217                     	;# 
   315  0219                     	;# 
   316  021A                     	;# 
   317  021B                     	;# 
   318  021C                     	;# 
   319  021D                     	;# 
   320  021E                     	;# 
   321  021F                     	;# 
   322  0291                     	;# 
   323  0291                     	;# 
   324  0292                     	;# 
   325  0293                     	;# 
   326  0294                     	;# 
   327  0295                     	;# 
   328  0295                     	;# 
   329  0296                     	;# 
   330  0298                     	;# 
   331  0298                     	;# 
   332  0299                     	;# 
   333  029A                     	;# 
   334  029B                     	;# 
   335  029C                     	;# 
   336  029C                     	;# 
   337  029D                     	;# 
   338  029E                     	;# 
   339  029E                     	;# 
   340  0311                     	;# 
   341  0311                     	;# 
   342  0312                     	;# 
   343  0313                     	;# 
   344  0318                     	;# 
   345  0318                     	;# 
   346  0319                     	;# 
   347  031A                     	;# 
   348  0394                     	;# 
   349  0395                     	;# 
   350  0396                     	;# 
   351  039A                     	;# 
   352  039C                     	;# 
   353  039D                     	;# 
   354  039E                     	;# 
   355  039F                     	;# 
   356  0415                     	;# 
   357  0416                     	;# 
   358  0417                     	;# 
   359  041C                     	;# 
   360  041D                     	;# 
   361  041E                     	;# 
   362  0FE4                     	;# 
   363  0FE5                     	;# 
   364  0FE6                     	;# 
   365  0FE7                     	;# 
   366  0FE8                     	;# 
   367  0FE9                     	;# 
   368  0FEA                     	;# 
   369  0FEB                     	;# 
   370  0FED                     	;# 
   371  0FEE                     	;# 
   372  0FEF                     	;# 
   373                           
   374                           	psect	idataBANK0
   375  0170                     __pidataBANK0:
   376                           
   377                           ;initializer for _ReDataBase
   378  0170  3400               	retlw	0
   379  0171  34FF               	retlw	-1
   380  0172  3401               	retlw	1
   381  0173  3400               	retlw	0
   382  0174  3401               	retlw	1
   383  0175  3400               	retlw	0
   384  0176  3400               	retlw	0
   385  0177  34FF               	retlw	-1
   386  0178  34FF               	retlw	-1
   387  0179  3400               	retlw	0
   388  017A  3400               	retlw	0
   389  017B  3401               	retlw	1
   390  017C  3400               	retlw	0
   391  017D  3401               	retlw	1
   392  017E  34FF               	retlw	-1
   393  017F  3400               	retlw	0
   394                           
   395                           	psect	nvBANK0
   396  0030                     __pnvBANK0:
   397  0030                     _reData:
   398  0030                     	ds	4
   399  000C                     _PORTA	set	12
   400  000D                     _PORTB	set	13
   401  005F                     _GIE	set	95
   402  005E                     _PEIE	set	94
   403  005B                     _IOCIE	set	91
   404  008D                     _RCIF	set	141
   405  0058                     _IOCIF	set	88
   406  009D                     _ADCON0	set	157
   407  009E                     _ADCON1	set	158
   408  008D                     _TRISB	set	141
   409  008C                     _TRISA	set	140
   410  0099                     _OSCCON	set	153
   411  009B                     _ADRESL	set	155
   412  009D                     _ADCON0bits	set	157
   413  048D                     _RCIE	set	1165
   414  010D                     _LATBbits	set	269
   415  0117                     _FVRCON	set	279
   416  011E                     _APFCON1	set	286
   417  011D                     _APFCON0	set	285
   418  019D                     _RCSTA	set	413
   419  019E                     _TXSTA	set	414
   420  019B                     _SPBRGL	set	411
   421  019C                     _SPBRGH	set	412
   422  019F                     _BAUDCON	set	415
   423  018D                     _ANSELB	set	397
   424  018C                     _ANSELA	set	396
   425  019A                     _TXREG	set	410
   426  0199                     _RCREG	set	409
   427  0CF1                     _TRMT	set	3313
   428  0394                     _IOCBP	set	916
   429  0395                     _IOCBN	set	917
   430  0396                     _IOCBF	set	918
   431                           
   432                           	psect	stringtext1
   433  012F                     __pstringtext1:
   434  012F                     STR_1:
   435  012F  3430               	retlw	48	;'0'
   436  0130  3431               	retlw	49	;'1'
   437  0131  3432               	retlw	50	;'2'
   438  0132  3433               	retlw	51	;'3'
   439  0133  3434               	retlw	52	;'4'
   440  0134  3435               	retlw	53	;'5'
   441  0135  3436               	retlw	54	;'6'
   442  0136  3437               	retlw	55	;'7'
   443  0137  3438               	retlw	56	;'8'
   444  0138  3439               	retlw	57	;'9'
   445  0139  3461               	retlw	97	;'a'
   446  013A  3462               	retlw	98	;'b'
   447  013B  3463               	retlw	99	;'c'
   448  013C  3464               	retlw	100	;'d'
   449  013D  3465               	retlw	101	;'e'
   450  013E  3466               	retlw	102	;'f'
   451  013F  3467               	retlw	103	;'g'
   452  0140  3468               	retlw	104	;'h'
   453  0141  3469               	retlw	105	;'i'
   454  0142  346A               	retlw	106	;'j'
   455  0143  346B               	retlw	107	;'k'
   456  0144  346C               	retlw	108	;'l'
   457  0145  346D               	retlw	109	;'m'
   458  0146  346E               	retlw	110	;'n'
   459  0147  346F               	retlw	111	;'o'
   460  0148  3470               	retlw	112	;'p'
   461  0149  3471               	retlw	113	;'q'
   462  014A  3472               	retlw	114	;'r'
   463  014B  3473               	retlw	115	;'s'
   464  014C  3474               	retlw	116	;'t'
   465  014D  3475               	retlw	117	;'u'
   466  014E  3476               	retlw	118	;'v'
   467  014F  3477               	retlw	119	;'w'
   468  0150  3478               	retlw	120	;'x'
   469  0151  3479               	retlw	121	;'y'
   470  0152  347A               	retlw	122	;'z'
   471  0153  3441               	retlw	65	;'A'
   472  0154  3442               	retlw	66	;'B'
   473  0155  3443               	retlw	67	;'C'
   474  0156  3444               	retlw	68	;'D'
   475  0157  3445               	retlw	69	;'E'
   476  0158  3446               	retlw	70	;'F'
   477  0159  3447               	retlw	71	;'G'
   478  015A  3448               	retlw	72	;'H'
   479  015B  3449               	retlw	73	;'I'
   480  015C  344A               	retlw	74	;'J'
   481  015D  344B               	retlw	75	;'K'
   482  015E  344C               	retlw	76	;'L'
   483  015F  344D               	retlw	77	;'M'
   484  0160  344E               	retlw	78	;'N'
   485  0161  344F               	retlw	79	;'O'
   486  0162  3450               	retlw	80	;'P'
   487  0163  3451               	retlw	81	;'Q'
   488  0164  3452               	retlw	82	;'R'
   489  0165  3453               	retlw	83	;'S'
   490  0166  3454               	retlw	84	;'T'
   491  0167  3455               	retlw	85	;'U'
   492  0168  3456               	retlw	86	;'V'
   493  0169  3457               	retlw	87	;'W'
   494  016A  3458               	retlw	88	;'X'
   495  016B  3459               	retlw	89	;'Y'
   496  016C  345A               	retlw	90	;'Z'
   497  016D  342B               	retlw	43	;'+'
   498  016E  342D               	retlw	45	;'-'
   499  016F  3400               	retlw	0
   500                           
   501                           	psect	stringtext2
   502  0000                     __pstringtext2:
   503                           
   504                           	psect	cinit
   505  0053                     start_initialization:	
   506                           ; #config settings
   507                           
   508  0053                     __initialization:
   509                           
   510                           ; Initialize objects allocated to BANK0
   511  0053  3070               	movlw	low __pidataBANK0
   512  0054  0084               	movwf	4
   513  0055  3081               	movlw	(high __pidataBANK0)| (0+128)
   514  0056  0085               	movwf	5
   515  0057  3020               	movlw	low __pdataBANK0
   516  0058  0086               	movwf	6
   517  0059  3000               	movlw	high __pdataBANK0
   518  005A  0087               	movwf	7
   519  005B  3010               	movlw	16
   520  005C  3181  21A4  3180   	fcall	init_ram
   521                           
   522                           ; Clear objects allocated to COMMON
   523  005F  01F6               	clrf	__pbssCOMMON& (0+127)
   524  0060  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   525  0061  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   526                           
   527                           ; Clear objects allocated to BANK0
   528  0062  01B4               	clrf	__pbssBANK0& (0+127)
   529  0063  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   530  0064  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   531  0065  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   532  0066                     end_of_initialization:	
   533                           ;End of C runtime variable initialization code
   534                           
   535  0066                     __end_of__initialization:
   536  0066  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   537  0067  0020               	movlb	0
   538  0068  3180  286A         	ljmp	_main	;jump to C main() function
   539                           
   540                           	psect	bssCOMMON
   541  0076                     __pbssCOMMON:
   542  0076                     _RE_L:
   543  0076                     	ds	1
   544  0077                     _SendFlag:
   545  0077                     	ds	1
   546  0078                     _HD:
   547  0078                     	ds	1
   548                           
   549                           	psect	bssBANK0
   550  0034                     __pbssBANK0:
   551  0034                     _sendData:
   552  0034                     	ds	4
   553                           
   554                           	psect	dataBANK0
   555  0020                     __pdataBANK0:
   556  0020                     _ReDataBase:
   557  0020                     	ds	16
   558                           
   559                           	psect	inittext
   560  01A4                     init_ram:
   561  01A4  00FE               	movwf	btemp
   562  01A5                     initloop:
   563  01A5  0012               	moviw fsr0++
   564  01A6  001E               	movwi fsr1++
   565  01A7  0BFE               	decfsz	btemp,f
   566  01A8  29A5               	goto	initloop
   567  01A9  3400               	retlw	0
   568                           
   569                           	psect	cstackCOMMON
   570  0070                     __pcstackCOMMON:
   571  0070                     ?_OnInterrupt:
   572  0070                     ??_OnInterrupt:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_SendUART_Raw:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_SendUART:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_ReadAD:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_main:	
   585                           ; 1 bytes @ 0x0
   586                           
   587                           
   588                           ; 1 bytes @ 0x0
   589  0070                     	ds	4
   590  0074                     ??_SendUART_Raw:
   591  0074                     ??_ReadAD:	
   592                           ; 1 bytes @ 0x4
   593                           
   594  0074                     SendUART_Raw@c:	
   595                           ; 1 bytes @ 0x4
   596                           
   597                           
   598                           ; 1 bytes @ 0x4
   599  0074                     	ds	1
   600  0075                     ??_SendUART:
   601  0075                     SendUART@c:	
   602                           ; 1 bytes @ 0x5
   603                           
   604                           
   605                           ; 1 bytes @ 0x5
   606  0075                     	ds	1
   607                           
   608                           	psect	cstackBANK0
   609  0038                     __pcstackBANK0:
   610  0038                     ??_main:
   611                           
   612                           ; 1 bytes @ 0x0
   613  0038                     	ds	4
   614                           
   615                           	psect	maintext
   616  006A                     __pmaintext:	
   617 ;;
   618 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   619 ;;
   620 ;; *************** function _main *****************
   621 ;; Defined at:
   622 ;;		line 53 in file "main.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : B1F/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   636 ;;      Params:         0       0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0       0
   638 ;;      Temps:          0       4       0       0       0       0
   639 ;;      Totals:         0       4       0       0       0       0
   640 ;;Total ram usage:        4 bytes
   641 ;; Hardware stack levels required when called: 3
   642 ;; This function calls:
   643 ;;		_ReadAD
   644 ;;		_SendUART
   645 ;;		_SendUART_Raw
   646 ;; This function is called by:
   647 ;;		Startup code after reset
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           
   652                           ;psect for function _main
   653  006A                     _main:
   654  006A                     l933:	
   655                           ;incstack = 0
   656                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   657                           
   658                           
   659                           ;main.c: 55:     APFCON0= 0x00;
   660  006A  30F0               	movlw	240
   661  006B  0021               	movlb	1	; select bank1
   662  006C  0099               	movwf	25	;volatile
   663                           
   664                           ;main.c: 56:     APFCON1= 0x00;
   665  006D  3009               	movlw	9
   666  006E  0023               	movlb	3	; select bank3
   667  006F  008C               	movwf	12	;volatile
   668  0070                     l935:
   669                           
   670                           ;main.c: 57:     BAUDCON= 0x08;
   671  0070  018D               	clrf	13	;volatile
   672  0071                     l937:
   673                           
   674                           ;main.c: 58:     SPBRGH = 0x00;
   675  0071  30FF               	movlw	255
   676  0072  0021               	movlb	1	; select bank1
   677  0073  008C               	movwf	12	;volatile
   678  0074                     l939:
   679                           
   680                           ;main.c: 59:     SPBRGL = 0x44;
   681  0074  30FA               	movlw	250
   682  0075  008D               	movwf	13	;volatile
   683  0076                     l941:
   684                           
   685                           ;main.c: 60:     TXSTA = 0x24;
   686  0076  0020               	movlb	0	; select bank0
   687  0077  018D               	clrf	13	;volatile
   688  0078  018C               	clrf	12	;volatile
   689  0079                     l943:
   690                           
   691                           ;main.c: 61:     RCSTA = 0x90;
   692  0079  0022               	movlb	2	; select bank2
   693  007A  019D               	clrf	29	;volatile
   694  007B                     l945:
   695                           
   696                           ;main.c: 62:     FVRCON = 0x00;
   697  007B  019E               	clrf	30	;volatile
   698                           
   699                           ;main.c: 63:     ADCON1 = 0x50;
   700  007C  3008               	movlw	8
   701  007D  0023               	movlb	3	; select bank3
   702  007E  009F               	movwf	31	;volatile
   703  007F                     l947:
   704                           
   705                           ;main.c: 64:     IOCBN = 0x30;
   706  007F  019C               	clrf	28	;volatile
   707  0080                     l949:
   708                           
   709                           ;main.c: 65:     IOCBP = 0x30;
   710  0080  3044               	movlw	68
   711  0081  009B               	movwf	27	;volatile
   712  0082                     l951:
   713                           
   714                           ;main.c: 66:     IOCBF = 0;
   715  0082  3024               	movlw	36
   716  0083  009E               	movwf	30	;volatile
   717  0084                     l953:
   718                           
   719                           ;main.c: 67:     IOCIE = 1;
   720  0084  3090               	movlw	144
   721  0085  009D               	movwf	29	;volatile
   722                           
   723                           ;main.c: 68:     RCIF = 0;
   724  0086  0022               	movlb	2	; select bank2
   725  0087  0197               	clrf	23	;volatile
   726  0088                     l955:
   727                           
   728                           ;main.c: 69:     RCIE = 1;
   729  0088  3050               	movlw	80
   730  0089  0021               	movlb	1	; select bank1
   731  008A  009E               	movwf	30	;volatile
   732  008B                     l957:
   733                           
   734                           ;main.c: 70:     PEIE = 1;
   735  008B  3030               	movlw	48
   736  008C  0027               	movlb	7	; select bank7
   737  008D  0095               	movwf	21	;volatile
   738  008E                     l959:
   739                           
   740                           ;main.c: 71:     GIE = 1;
   741  008E  3030               	movlw	48
   742  008F  0094               	movwf	20	;volatile
   743  0090                     l961:
   744                           
   745                           ;main.c: 72:     reData = 8000000;
   746  0090  0196               	clrf	22	;volatile
   747  0091                     l963:
   748                           
   749                           ;main.c: 73:     LATBbits.LATB0 = 1;
   750  0091  158B               	bsf	11,3	;volatile
   751  0092                     l965:
   752                           
   753                           ;main.c: 74: 
   754  0092  0020               	movlb	0	; select bank0
   755  0093  1291               	bcf	17,5	;volatile
   756  0094                     l967:
   757                           
   758                           ;main.c: 75:     for (;;)
   759  0094  0021               	movlb	1	; select bank1
   760  0095  1691               	bsf	17,5	;volatile
   761  0096                     l969:
   762                           
   763                           ;main.c: 76:     {
   764  0096  170B               	bsf	11,6	;volatile
   765  0097                     l971:
   766                           
   767                           ;main.c: 77:         while(!SendFlag);
   768  0097  178B               	bsf	11,7	;volatile
   769                           
   770                           ;main.c: 78: 
   771  0098  3000               	movlw	0
   772  0099  0020               	movlb	0	; select bank0
   773  009A  00B3               	movwf	_reData+3
   774  009B  307A               	movlw	122
   775  009C  00B2               	movwf	_reData+2
   776  009D  3012               	movlw	18
   777  009E  00B1               	movwf	_reData+1
   778  009F  3000               	movlw	0
   779  00A0  00B0               	movwf	_reData
   780  00A1                     l973:
   781                           
   782                           ;main.c: 79: 
   783  00A1  0022               	movlb	2	; select bank2
   784  00A2  140D               	bsf	13,0	;volatile
   785  00A3                     l975:
   786  00A3  0877               	movf	_SendFlag,w
   787  00A4  1903               	btfsc	3,2
   788  00A5  28A7               	goto	u291
   789  00A6  28A8               	goto	u290
   790  00A7                     u291:
   791  00A7  28A3               	goto	l975
   792  00A8                     u290:
   793  00A8                     l977:
   794                           
   795                           ;main.c: 86:         ADCON0 = 0x0D;
   796  00A8  3001               	movlw	1
   797  00A9  0021               	movlb	1	; select bank1
   798  00AA  009D               	movwf	29	;volatile
   799  00AB                     l979:
   800                           
   801                           ;main.c: 87:         HD = ReadAD();
   802  00AB  3181  2180  3180   	fcall	_ReadAD
   803  00AE  0020               	movlb	0	; select bank0
   804  00AF  00B8               	movwf	??_main
   805  00B0  0838               	movf	??_main,w
   806  00B1  00F8               	movwf	_HD
   807  00B2                     l981:
   808                           
   809                           ;main.c: 88:         SendUART(HD >> 4);
   810  00B2  0878               	movf	_HD,w
   811  00B3  00B8               	movwf	??_main
   812  00B4  3004               	movlw	4
   813  00B5                     u305:
   814  00B5  36B8               	lsrf	??_main,f
   815  00B6  0B89               	decfsz	9,f
   816  00B7  28B5               	goto	u305
   817  00B8  0838               	movf	??_main,w
   818  00B9  3181  218E  3180   	fcall	_SendUART
   819  00BC                     l983:
   820                           
   821                           ;main.c: 89:         SendUART(HD & 0xF);
   822  00BC  0878               	movf	_HD,w
   823  00BD  390F               	andlw	15
   824  00BE  3181  218E  3180   	fcall	_SendUART
   825  00C1                     l985:
   826                           
   827                           ;main.c: 92:         sendData = reData;
   828  00C1  300D               	movlw	13
   829  00C2  0021               	movlb	1	; select bank1
   830  00C3  009D               	movwf	29	;volatile
   831                           
   832                           ;main.c: 93:         SendUART(sendData >> 18 & 0x3F);
   833  00C4  3181  2180  3180   	fcall	_ReadAD
   834  00C7  0020               	movlb	0	; select bank0
   835  00C8  00B8               	movwf	??_main
   836  00C9  0838               	movf	??_main,w
   837  00CA  00F8               	movwf	_HD
   838  00CB                     l987:
   839                           
   840                           ;main.c: 94:         SendUART(sendData >> 12 & 0x3F);
   841  00CB  0878               	movf	_HD,w
   842  00CC  00B8               	movwf	??_main
   843  00CD  3004               	movlw	4
   844  00CE                     u315:
   845  00CE  36B8               	lsrf	??_main,f
   846  00CF  0B89               	decfsz	9,f
   847  00D0  28CE               	goto	u315
   848  00D1  0838               	movf	??_main,w
   849  00D2  3181  218E  3180   	fcall	_SendUART
   850  00D5                     l989:
   851                           
   852                           ;main.c: 95:         SendUART(sendData >> 6 & 0x3F);
   853  00D5  0878               	movf	_HD,w
   854  00D6  390F               	andlw	15
   855  00D7  3181  218E  3180   	fcall	_SendUART
   856  00DA                     l991:
   857                           
   858                           ;main.c: 98: 
   859  00DA  0020               	movlb	0	; select bank0
   860  00DB  0833               	movf	_reData+3,w
   861  00DC  00B7               	movwf	_sendData+3
   862  00DD  0832               	movf	_reData+2,w
   863  00DE  00B6               	movwf	_sendData+2
   864  00DF  0831               	movf	_reData+1,w
   865  00E0  00B5               	movwf	_sendData+1
   866  00E1  0830               	movf	_reData,w
   867  00E2  00B4               	movwf	_sendData
   868  00E3                     l993:
   869                           
   870                           ;main.c: 99:         SendUART_Raw('\n');
   871  00E3  0834               	movf	_sendData,w
   872  00E4  00B8               	movwf	??_main
   873  00E5  0835               	movf	_sendData+1,w
   874  00E6  00B9               	movwf	??_main+1
   875  00E7  0836               	movf	_sendData+2,w
   876  00E8  00BA               	movwf	??_main+2
   877  00E9  0837               	movf	_sendData+3,w
   878  00EA  00BB               	movwf	??_main+3
   879  00EB  3012               	movlw	18
   880  00EC                     u325:
   881  00EC  36BB               	lsrf	??_main+3,f
   882  00ED  0CBA               	rrf	??_main+2,f
   883  00EE  0CB9               	rrf	??_main+1,f
   884  00EF  0CB8               	rrf	??_main,f
   885  00F0                     u320:
   886  00F0  0B89               	decfsz	9,f
   887  00F1  28EC               	goto	u325
   888  00F2  0838               	movf	??_main,w
   889  00F3  393F               	andlw	63
   890  00F4  3181  218E  3180   	fcall	_SendUART
   891  00F7                     l995:
   892                           
   893                           ;main.c: 100:         SendFlag = 0;
   894  00F7  0020               	movlb	0	; select bank0
   895  00F8  0834               	movf	_sendData,w
   896  00F9  00B8               	movwf	??_main
   897  00FA  0835               	movf	_sendData+1,w
   898  00FB  00B9               	movwf	??_main+1
   899  00FC  0836               	movf	_sendData+2,w
   900  00FD  00BA               	movwf	??_main+2
   901  00FE  0837               	movf	_sendData+3,w
   902  00FF  00BB               	movwf	??_main+3
   903  0100  300C               	movlw	12
   904  0101                     u335:
   905  0101  36BB               	lsrf	??_main+3,f
   906  0102  0CBA               	rrf	??_main+2,f
   907  0103  0CB9               	rrf	??_main+1,f
   908  0104  0CB8               	rrf	??_main,f
   909  0105                     u330:
   910  0105  0B89               	decfsz	9,f
   911  0106  2901               	goto	u335
   912  0107  0838               	movf	??_main,w
   913  0108  393F               	andlw	63
   914  0109  3181  218E  3180   	fcall	_SendUART
   915  010C                     l997:
   916                           
   917                           ;main.c: 101:     }
   918  010C  0020               	movlb	0	; select bank0
   919  010D  0834               	movf	_sendData,w
   920  010E  00B8               	movwf	??_main
   921  010F  0835               	movf	_sendData+1,w
   922  0110  00B9               	movwf	??_main+1
   923  0111  0836               	movf	_sendData+2,w
   924  0112  00BA               	movwf	??_main+2
   925  0113  0837               	movf	_sendData+3,w
   926  0114  00BB               	movwf	??_main+3
   927  0115  3006               	movlw	6
   928  0116                     u345:
   929  0116  36BB               	lsrf	??_main+3,f
   930  0117  0CBA               	rrf	??_main+2,f
   931  0118  0CB9               	rrf	??_main+1,f
   932  0119  0CB8               	rrf	??_main,f
   933  011A                     u340:
   934  011A  0B89               	decfsz	9,f
   935  011B  2916               	goto	u345
   936  011C  0838               	movf	??_main,w
   937  011D  393F               	andlw	63
   938  011E  3181  218E  3180   	fcall	_SendUART
   939  0121                     l999:
   940                           
   941                           ;main.c: 102: 
   942  0121  0020               	movlb	0	; select bank0
   943  0122  0834               	movf	_sendData,w
   944  0123  393F               	andlw	63
   945  0124  3181  218E  3180   	fcall	_SendUART
   946  0127                     l1001:
   947  0127  300A               	movlw	10
   948  0128  3181  219B  3180   	fcall	_SendUART_Raw
   949  012B                     l1003:
   950  012B  01F7               	clrf	_SendFlag
   951  012C  28A3               	goto	l975
   952  012D  3180  2851         	ljmp	start
   953  012F                     __end_of_main:
   954                           
   955                           	psect	text1
   956  018E                     __ptext1:	
   957 ;; *************** function _SendUART *****************
   958 ;; Defined at:
   959 ;;		line 37 in file "main.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  c               1    wreg     unsigned char 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  c               1    5[COMMON] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   973 ;;      Params:         0       0       0       0       0       0
   974 ;;      Locals:         1       0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0       0
   976 ;;      Totals:         1       0       0       0       0       0
   977 ;;Total ram usage:        1 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; Hardware stack levels required when called: 2
   980 ;; This function calls:
   981 ;;		_SendUART_Raw
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function _SendUART
   989  018E                     _SendUART:
   990                           
   991                           ;incstack = 0
   992                           ; Regs used in _SendUART: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   993                           ;SendUART@c stored from wreg
   994  018E  00F5               	movwf	SendUART@c
   995  018F                     l831:
   996                           
   997                           ;main.c: 37: unsigned char ReadAD();main.c: 38: {;main.c: 39:     _delay(400);
   998  018F  0875               	movf	SendUART@c,w
   999  0190  3E2F               	addlw	low (STR_1| (0+32768))
  1000  0191  0084               	movwf	4
  1001  0192  3081               	movlw	high (STR_1| (0+32768))
  1002  0193  1803               	skipnc
  1003  0194  3E01               	addlw	1
  1004  0195  0085               	movwf	5
  1005  0196  0800               	movf	0,w	;code access
  1006  0197  3181  219B  3181   	fcall	_SendUART_Raw
  1007  019A                     l97:
  1008  019A  0008               	return
  1009  019B                     __end_of_SendUART:
  1010                           
  1011                           	psect	text2
  1012  019B                     __ptext2:	
  1013 ;; *************** function _SendUART_Raw *****************
  1014 ;; Defined at:
  1015 ;;		line 30 in file "main.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  c               1    wreg     unsigned char 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  c               1    4[COMMON] unsigned char 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1029 ;;      Params:         0       0       0       0       0       0
  1030 ;;      Locals:         1       0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0
  1032 ;;      Totals:         1       0       0       0       0       0
  1033 ;;Total ram usage:        1 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 1
  1036 ;; This function calls:
  1037 ;;		Nothing
  1038 ;; This function is called by:
  1039 ;;		_SendUART
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           
  1045                           ;psect for function _SendUART_Raw
  1046  019B                     _SendUART_Raw:
  1047                           
  1048                           ;incstack = 0
  1049                           ; Regs used in _SendUART_Raw: [wreg]
  1050                           ;SendUART_Raw@c stored from wreg
  1051  019B  00F4               	movwf	SendUART_Raw@c
  1052  019C                     l827:
  1053  019C                     l91:	
  1054                           ;main.c: 30: ;main.c: 31: void SendUART(unsigned char c);main.c: 32: {
  1055                           
  1056  019C  0023               	movlb	3	; select bank3
  1057  019D  1C9E               	btfss	30,1	;volatile
  1058  019E  29A0               	goto	u151
  1059  019F  29A1               	goto	u150
  1060  01A0                     u151:
  1061  01A0  299C               	goto	l91
  1062  01A1                     u150:
  1063  01A1                     l829:
  1064                           
  1065                           ;main.c: 33:     SendUART_Raw("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTU
      +                          VWXYZ+-"[c]);
  1066  01A1  0874               	movf	SendUART_Raw@c,w
  1067  01A2  009A               	movwf	26	;volatile
  1068  01A3                     l94:
  1069  01A3  0008               	return
  1070  01A4                     __end_of_SendUART_Raw:
  1071                           
  1072                           	psect	text3
  1073  0180                     __ptext3:	
  1074 ;; *************** function _ReadAD *****************
  1075 ;; Defined at:
  1076 ;;		line 43 in file "main.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      unsigned char 
  1083 ;; Registers used:
  1084 ;;		wreg
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1090 ;;      Params:         0       0       0       0       0       0
  1091 ;;      Locals:         0       0       0       0       0       0
  1092 ;;      Temps:          0       0       0       0       0       0
  1093 ;;      Totals:         0       0       0       0       0       0
  1094 ;;Total ram usage:        0 bytes
  1095 ;; Hardware stack levels used: 1
  1096 ;; Hardware stack levels required when called: 1
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_main
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           
  1105                           ;psect for function _ReadAD
  1106  0180                     _ReadAD:
  1107  0180                     l833:	
  1108                           ;incstack = 0
  1109                           ; Regs used in _ReadAD: [wreg]
  1110                           
  1111                           
  1112                           ;main.c: 45: 
  1113  0180  3085               	movlw	133
  1114  0181                     u357:
  1115  0181  0B89               	decfsz	9,f
  1116  0182  2981               	goto	u357
  1117  0183  0000               	nop
  1118  0184                     l835:
  1119                           
  1120                           ;main.c: 46: 
  1121  0184  0021               	movlb	1	; select bank1
  1122  0185  149D               	bsf	29,1	;volatile
  1123  0186  0000               	nop	;# 
  1124  0187                     l100:	
  1125                           ;main.c: 48: {
  1126                           
  1127  0187  0021               	movlb	1	; select bank1
  1128  0188  189D               	btfsc	29,1	;volatile
  1129  0189  298B               	goto	u161
  1130  018A  298C               	goto	u160
  1131  018B                     u161:
  1132  018B  2987               	goto	l100
  1133  018C                     u160:
  1134  018C                     l837:
  1135                           
  1136                           ;main.c: 49:     OSCCON = 0xF0;
  1137  018C  081B               	movf	27,w	;volatile
  1138  018D                     l103:
  1139  018D  0008               	return
  1140  018E                     __end_of_ReadAD:
  1141                           
  1142                           	psect	intentry
  1143  0004                     __pintentry:	
  1144 ;; *************** function _OnInterrupt *****************
  1145 ;; Defined at:
  1146 ;;		line 12 in file "main.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1160 ;;      Params:         0       0       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0       0
  1162 ;;      Temps:          4       0       0       0       0       0
  1163 ;;      Totals:         4       0       0       0       0       0
  1164 ;;Total ram usage:        4 bytes
  1165 ;; Hardware stack levels used: 1
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		Interrupt level 1
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173  0004                     _OnInterrupt:
  1174                           
  1175                           ;incstack = 0
  1176  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1177                           
  1178                           ; Regs used in _OnInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  1179  0005  3180               	pagesel	$
  1180  0006                     i1l841:
  1181                           
  1182                           ;main.c: 14: 
  1183  0006  1C0B               	btfss	11,0	;volatile
  1184  0007  2809               	goto	u17_21
  1185  0008  280A               	goto	u17_20
  1186  0009                     u17_21:
  1187  0009  282F               	goto	i1l849
  1188  000A                     u17_20:
  1189  000A                     i1l843:
  1190                           
  1191                           ;main.c: 15:     if (RCIF);main.c: 16:     {
  1192  000A  0020               	movlb	0	; select bank0
  1193  000B  080D               	movf	13,w	;volatile
  1194  000C  00F0               	movwf	??_OnInterrupt
  1195  000D  3004               	movlw	4
  1196  000E                     u18_25:
  1197  000E  36F0               	lsrf	??_OnInterrupt,f
  1198  000F  0B89               	decfsz	9,f
  1199  0010  280E               	goto	u18_25
  1200  0011  3003               	movlw	3
  1201  0012  0570               	andwf	??_OnInterrupt,w
  1202  0013  00F1               	movwf	??_OnInterrupt+1
  1203  0014  0876               	movf	_RE_L,w
  1204  0015  00F2               	movwf	??_OnInterrupt+2
  1205  0016  3001               	movlw	1
  1206  0017                     u19_25:
  1207  0017  35F2               	lslf	??_OnInterrupt+2,f
  1208  0018  3EFF               	addlw	-1
  1209  0019  1D03               	skipz
  1210  001A  2817               	goto	u19_25
  1211  001B  3572               	lslf	??_OnInterrupt+2,w
  1212  001C  0471               	iorwf	??_OnInterrupt+1,w
  1213  001D  00F3               	movwf	??_OnInterrupt+3
  1214  001E  0873               	movf	??_OnInterrupt+3,w
  1215  001F  00F6               	movwf	_RE_L
  1216  0020                     i1l845:
  1217                           
  1218                           ;main.c: 17:         if(RCREG == '\n') SendFlag = 1;
  1219  0020  0876               	movf	_RE_L,w
  1220  0021  390F               	andlw	15
  1221  0022  3E20               	addlw	(low (_ReDataBase| 0))& (0+255)
  1222  0023  0086               	movwf	6
  1223  0024  0187               	clrf	7
  1224  0025  0801               	movf	1,w
  1225  0026  07B0               	addwf	_reData,f
  1226  0027  3980               	andlw	128
  1227  0028  1D03               	skipz
  1228  0029  30FF               	movlw	255
  1229  002A  3DB1               	addwfc	_reData+1,f
  1230  002B  3DB2               	addwfc	_reData+2,f
  1231  002C  3DB3               	addwfc	_reData+3,f
  1232  002D                     i1l847:
  1233                           
  1234                           ;main.c: 18:         else if(RCREG == 'r') reData = 8000000;
  1235  002D  0027               	movlb	7	; select bank7
  1236  002E  0196               	clrf	22	;volatile
  1237  002F                     i1l849:
  1238                           
  1239                           ;main.c: 21: }
  1240  002F  0020               	movlb	0	; select bank0
  1241  0030  1E91               	btfss	17,5	;volatile
  1242  0031  2833               	goto	u20_21
  1243  0032  2834               	goto	u20_20
  1244  0033                     u20_21:
  1245  0033  284F               	goto	i1l88
  1246  0034                     u20_20:
  1247  0034                     i1l851:
  1248                           
  1249                           ;main.c: 22: ;main.c: 23: 
  1250  0034  300A               	movlw	10
  1251  0035  0023               	movlb	3	; select bank3
  1252  0036  0619               	xorwf	25,w	;volatile
  1253  0037  1D03               	btfss	3,2
  1254  0038  283A               	goto	u21_21
  1255  0039  283B               	goto	u21_20
  1256  003A                     u21_21:
  1257  003A  283E               	goto	i1l855
  1258  003B                     u21_20:
  1259  003B                     i1l853:
  1260  003B  01F7               	clrf	_SendFlag
  1261  003C  0AF7               	incf	_SendFlag,f
  1262  003D  284D               	goto	i1l859
  1263  003E                     i1l855:
  1264  003E  3072               	movlw	114
  1265  003F  0619               	xorwf	25,w	;volatile
  1266  0040  1D03               	btfss	3,2
  1267  0041  2843               	goto	u22_21
  1268  0042  2844               	goto	u22_20
  1269  0043                     u22_21:
  1270  0043  284D               	goto	i1l859
  1271  0044                     u22_20:
  1272  0044                     i1l857:
  1273  0044  3000               	movlw	0
  1274  0045  0020               	movlb	0	; select bank0
  1275  0046  00B3               	movwf	_reData+3
  1276  0047  307A               	movlw	122
  1277  0048  00B2               	movwf	_reData+2
  1278  0049  3012               	movlw	18
  1279  004A  00B1               	movwf	_reData+1
  1280  004B  3000               	movlw	0
  1281  004C  00B0               	movwf	_reData
  1282  004D                     i1l859:
  1283                           
  1284                           ;main.c: 25: {
  1285  004D  0020               	movlb	0	; select bank0
  1286  004E  1291               	bcf	17,5	;volatile
  1287  004F                     i1l88:
  1288  004F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1289  0050  0009               	retfie
  1290  0051                     __end_of_OnInterrupt:
  1291  007E                     btemp	set	126	;btemp
  1292  007E                     int$flags	set	126
  1293  007E                     wtemp0	set	126
  1294                           
  1295                           	psect	config
  1296                           
  1297                           ;Config register CONFIG1 @ 0x8007
  1298                           ;	Oscillator Selection
  1299                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1300                           ;	Watchdog Timer Enable
  1301                           ;	WDTE = OFF, WDT disabled
  1302                           ;	Power-up Timer Enable
  1303                           ;	PWRTE = ON, PWRT enabled
  1304                           ;	MCLR Pin Function Select
  1305                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1306                           ;	Flash Program Memory Code Protection
  1307                           ;	CP = OFF, Program memory code protection is disabled
  1308                           ;	Data Memory Code Protection
  1309                           ;	CPD = OFF, Data memory code protection is disabled
  1310                           ;	Brown-out Reset Enable
  1311                           ;	BOREN = ON, Brown-out Reset enabled
  1312                           ;	Clock Out Enable
  1313                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1314                           ;	Internal/External Switchover
  1315                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1316                           ;	Fail-Safe Clock Monitor Enable
  1317                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1318  8007                     	org	32775
  1319  8007  0F84               	dw	3972
  1320                           
  1321                           ;Config register CONFIG2 @ 0x8008
  1322                           ;	Flash Memory Self-Write Protection
  1323                           ;	WRT = OFF, Write protection off
  1324                           ;	PLL Enable
  1325                           ;	PLLEN = OFF, 4x PLL disabled
  1326                           ;	Stack Overflow/Underflow Reset Enable
  1327                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1328                           ;	Brown-out Reset Voltage Selection
  1329                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  1330                           ;	Low-Voltage Programming Enable
  1331                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1332  8008                     	org	32776
  1333  8008  1AFF               	dw	6911

Data Sizes:
    Strings     65
    Constant    0
    Data        16
    BSS         7
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      4      28
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SendUART
    _SendUART->_SendUART_Raw

Critical Paths under _OnInterrupt in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _OnInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _OnInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _OnInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _OnInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _OnInterrupt in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      66
                                              0 BANK0      4     4      0
                             _ReadAD
                           _SendUART
                       _SendUART_Raw
 ---------------------------------------------------------------------------------
 (1) _SendUART                                             1     1      0      44
                                              5 COMMON     1     1      0
                       _SendUART_Raw
 ---------------------------------------------------------------------------------
 (1) _SendUART_Raw                                         1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadAD                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _OnInterrupt                                          4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadAD
   _SendUART
     _SendUART_Raw
   _SendUART_Raw

 _OnInterrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      25       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      4      1C       6       35.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      25      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 26 13:54:50 2022

                     _HD 0078                       l91 019C                       l94 01A3  
                     l97 019A                      l100 0187                      l103 018D  
                    l831 018F                      l833 0180                      l835 0184  
                    l827 019C                      l837 018C                      l829 01A1  
                    l941 0076                      l933 006A                      l951 0082  
                    l943 0079                      l935 0070                      l961 0090  
                    l953 0084                      l945 007B                      l937 0071  
                    l971 0097                      l963 0091                      l955 0088  
                    l947 007F                      l939 0074                      l981 00B2  
                    l973 00A1                      l965 0092                      l957 008B  
                    l949 0080                      l991 00DA                      l983 00BC  
                    l975 00A3                      l967 0094                      l959 008E  
                    l993 00E3                      l985 00C1                      l977 00A8  
                    l969 0096                      l995 00F7                      l987 00CB  
                    l979 00AB                      _GIE 005F                      l997 010C  
                    l989 00D5                      l999 0121                      u150 01A1  
                    u151 01A0                      u160 018C                      u320 00F0  
                    u161 018B                      u305 00B5                      u330 0105  
                    u315 00CE                      u340 011A                      u325 00EC  
                    u335 0101                      u345 0116                      u290 00A8  
                    u291 00A7                      u357 0181                      wreg 0009  
                   l1001 0127                     l1003 012B                     STR_1 012F  
                   _PEIE 005E                     _RCIE 048D                     _RCIF 008D  
                   i1l88 004F                     _RE_L 0076                     _TRMT 0CF1  
                   _main 006A                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E                     start 0051  
          ??_OnInterrupt 0070               _ReDataBase 0020                    ?_main 0070  
                  _IOCBF 0396                    _IOCBN 0395                    _IOCBP 0394  
                  _IOCIE 005B                    _IOCIF 0058                    i1l841 0006  
                  i1l851 0034                    i1l843 000A                    i1l853 003B  
                  i1l845 0020                    i1l855 003E                    i1l847 002D  
                  i1l857 0044                    i1l849 002F                    i1l859 004D  
                  _RCREG 0199                    _RCSTA 019D                    u20_20 0034  
                  u20_21 0033                    u21_20 003B                    u21_21 003A  
                  u22_20 0044                    u22_21 0043                    u17_20 000A  
                  u17_21 0009                    u18_25 000E                    _PORTA 000C  
                  _PORTB 000D                    u19_25 0017                    _TRISA 008C  
                  _TRISB 008D                    _TXREG 019A                    _TXSTA 019E  
                  status 0003                    wtemp0 007E          __initialization 0053  
           __end_of_main 012F      __end_of_OnInterrupt 0051         __end_of_SendUART 019B  
                 ??_main 0038                   _ADCON0 009D                   _ADCON1 009E  
                 _ADRESL 009B                   _ANSELA 018C                   _ANSELB 018D  
          ?_SendUART_Raw 0070                   _FVRCON 0117                   _OSCCON 0099  
                 _SPBRGH 019C                   _SPBRGL 019B                   _ReadAD 0180  
                 _reData 0030           ??_SendUART_Raw 0074  __end_of__initialization 0066  
            _OnInterrupt 0004           __pcstackCOMMON 0070             __pidataBANK0 0170  
             __pbssBANK0 0034                ?_SendUART 0070                  ?_ReadAD 0070  
             __pmaintext 006A               __pintentry 0004                  _BAUDCON 019F  
                _APFCON0 011D                  _APFCON1 011E               ??_SendUART 0075  
        __size_of_ReadAD 000E     __end_of_SendUART_Raw 01A4                  __ptext1 018E  
                __ptext2 019B                  __ptext3 0180     end_of_initialization 0066  
                init_ram 01A4                  initloop 01A5             ?_OnInterrupt 0070  
         __end_of_ReadAD 018E                SendUART@c 0075      start_initialization 0053  
               ??_ReadAD 0074    __size_of_SendUART_Raw 0009        __size_of_SendUART 000D  
            __pdataBANK0 0020              __pbssCOMMON 0076                ___latbits 0001  
          __pcstackBANK0 0038             _SendUART_Raw 019B                __pnvBANK0 0030  
               _LATBbits 010D     __size_of_OnInterrupt 004D               _ADCON0bits 009D  
               _SendUART 018E                 _SendFlag 0077            SendUART_Raw@c 0074  
          __size_of_main 00C5                 _sendData 0034                 int$flags 007E  
               intlevel1 0000            __pstringtext1 012F            __pstringtext2 0000  
